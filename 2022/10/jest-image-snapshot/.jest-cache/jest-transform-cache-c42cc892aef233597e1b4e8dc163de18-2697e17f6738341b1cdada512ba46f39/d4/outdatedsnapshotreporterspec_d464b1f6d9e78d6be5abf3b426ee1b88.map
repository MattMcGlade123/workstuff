{"version":3,"names":["fs","require","os","childProcess","path","rimraf","describe","jestImageSnapshotDir","join","__dirname","imagePath","jestExe","process","platform","jestBinPath","tmpDir","tmpdir","setupTestProject","dir","jestConfig","reporters","jestConfigFile","JSON","stringify","commonTest","replace","imageTest","doubleTest","writeFileSync","copyFileSync","runJest","cliArgs","environment","child","spawnSync","cwd","encoding","env","error","getSnapshotFiles","readdirSync","beforeAll","mkdtempSync","afterAll","sync","it","status","stdout","stderr","expect","toContain","toEqual","toHaveLength","JEST_IMAGE_SNAPSHOT_TRACK_OBSOLETE"],"sources":["outdated-snapshot-reporter.spec.js"],"sourcesContent":["/*\n * Copyright (c) 2020 American Express Travel Related Services Company, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nconst fs = require('fs');\nconst os = require('os');\nconst childProcess = require('child_process');\nconst path = require('path');\nconst rimraf = require('rimraf');\n\ndescribe('OutdatedSnapshotReporter', () => {\n  const jestImageSnapshotDir = path.join(__dirname, '..');\n  const imagePath = path.join(__dirname, 'stubs/TestImage.png');\n  const jestExe = process.platform === 'win32' ? 'jest.cmd' : 'jest';\n  const jestBinPath = path.join(jestImageSnapshotDir, `node_modules/.bin/${jestExe}`);\n  let tmpDir = os.tmpdir();\n\n  function setupTestProject(dir) {\n    const jestConfig = {\n      reporters: [\n        'default',\n        `${jestImageSnapshotDir}/src/outdated-snapshot-reporter.js`,\n      ],\n    };\n    const jestConfigFile = `module.exports = ${JSON.stringify(jestConfig)}`;\n\n    const commonTest = `\n    const fs = require('fs');\n    const {toMatchImageSnapshot} = require('${jestImageSnapshotDir.replace(/\\\\/g, '/')}');\n    expect.extend({toMatchImageSnapshot});\n    `;\n    const imageTest = `${commonTest}\n    it('should run an image snapshot test', () => {\n      expect(fs.readFileSync('image.png')).toMatchImageSnapshot();\n    });\n    `;\n    const doubleTest = `${imageTest}\n    it('should run an image snapshot test', () => {\n      expect(fs.readFileSync('image.png')).toMatchImageSnapshot();\n    });\n    `;\n\n    fs.writeFileSync(path.join(dir, 'jest.config.js'), jestConfigFile);\n    fs.writeFileSync(path.join(dir, 'image.test.js'), imageTest);\n    fs.writeFileSync(path.join(dir, 'double.test.js'), doubleTest);\n    fs.copyFileSync(imagePath, path.join(dir, 'image.png'));\n  }\n\n  function runJest(cliArgs, environment = {}) {\n    const child = childProcess.spawnSync(jestBinPath, cliArgs, {\n      cwd: tmpDir,\n      encoding: 'utf-8',\n      env: { ...process.env, ...environment },\n    });\n    if (child.error) throw child.error;\n\n    return child;\n  }\n\n  function getSnapshotFiles() {\n    return fs.readdirSync(path.join(tmpDir, '__image_snapshots__'));\n  }\n\n  beforeAll(() => {\n    tmpDir = fs.mkdtempSync(\n      path.join(os.tmpdir(), 'jest-image-snapshot-tests')\n    );\n    setupTestProject(tmpDir);\n  });\n\n  afterAll(() => {\n    rimraf.sync(tmpDir);\n  });\n\n  it('should write the image snapshot on first run', () => {\n    const { status, stdout, stderr } = runJest(['-u']);\n    expect(stderr).toContain('snapshots written');\n    expect(status).toEqual(0);\n    expect(stdout).toEqual('');\n\n    expect(getSnapshotFiles()).toHaveLength(3);\n  });\n\n  it('should not delete the snapshot when environment flag is not enabled', () => {\n    const { status, stdout } = runJest(['-u', 'image.test.js']);\n    expect(status).toEqual(0);\n    expect(stdout).toEqual('');\n\n    expect(getSnapshotFiles()).toHaveLength(3);\n  });\n\n  it('should delete the snapshot when environment flag is enabled', () => {\n    const { status, stdout, stderr } = runJest(['-u', 'image.test.js'], {\n      JEST_IMAGE_SNAPSHOT_TRACK_OBSOLETE: '1',\n    });\n    expect(stderr).toContain('outdated snapshot');\n    expect(status).toEqual(0);\n    expect(stdout).toEqual('');\n\n    expect(getSnapshotFiles()).toHaveLength(1);\n  });\n});\n"],"mappings":"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"}