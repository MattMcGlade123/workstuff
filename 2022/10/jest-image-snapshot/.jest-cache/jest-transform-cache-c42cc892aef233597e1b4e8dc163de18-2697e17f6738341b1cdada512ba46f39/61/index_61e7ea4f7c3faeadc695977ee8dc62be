2306b995c849b72ada49e191bcb58e1c
/* istanbul ignore next */
function cov_1e2g1rljrj() {
  var path = "/Users/matt.mcglade/Repo/dev/2022/10/jest-image-snapshot/src/index.js";
  var hash = "77c1eff393762774119f60ed3a423ed83de66e3a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matt.mcglade/Repo/dev/2022/10/jest-image-snapshot/src/index.js",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 18
        },
        end: {
          line: 15,
          column: 45
        }
      },
      "1": {
        start: {
          line: 16,
          column: 14
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "2": {
        start: {
          line: 17,
          column: 13
        },
        end: {
          line: 17,
          column: 28
        }
      },
      "3": {
        start: {
          line: 18,
          column: 14
        },
        end: {
          line: 18,
          column: 39
        }
      },
      "4": {
        start: {
          line: 19,
          column: 56
        },
        end: {
          line: 19,
          column: 82
        }
      },
      "5": {
        start: {
          line: 20,
          column: 11
        },
        end: {
          line: 20,
          column: 24
        }
      },
      "6": {
        start: {
          line: 21,
          column: 33
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "8": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 43
        }
      },
      "9": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "10": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 33
        }
      },
      "11": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 31,
          column: 60
        }
      },
      "12": {
        start: {
          line: 44,
          column: 13
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "13": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 93,
          column: 3
        }
      },
      "14": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 79
        }
      },
      "15": {
        start: {
          line: 55,
          column: 9
        },
        end: {
          line: 93,
          column: 3
        }
      },
      "16": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 75
        }
      },
      "17": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "18": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "19": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 61,
          column: 81
        }
      },
      "20": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 63,
          column: 60
        }
      },
      "21": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 66,
          column: 7
        }
      },
      "22": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 87
        }
      },
      "23": {
        start: {
          line: 68,
          column: 35
        },
        end: {
          line: 68,
          column: 57
        }
      },
      "24": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 91,
          column: 8
        }
      },
      "25": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "26": {
        start: {
          line: 72,
          column: 10
        },
        end: {
          line: 72,
          column: 261
        }
      },
      "27": {
        start: {
          line: 74,
          column: 10
        },
        end: {
          line: 74,
          column: 182
        }
      },
      "28": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 100
        }
      },
      "29": {
        start: {
          line: 79,
          column: 37
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "30": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "31": {
        start: {
          line: 85,
          column: 10
        },
        end: {
          line: 85,
          column: 197
        }
      },
      "32": {
        start: {
          line: 86,
          column: 15
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "33": {
        start: {
          line: 87,
          column: 10
        },
        end: {
          line: 87,
          column: 131
        }
      },
      "34": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 23
        }
      },
      "35": {
        start: {
          line: 95,
          column: 2
        },
        end: {
          line: 98,
          column: 4
        }
      },
      "36": {
        start: {
          line: 108,
          column: 18
        },
        end: {
          line: 108,
          column: 62
        }
      },
      "37": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 109,
          column: 97
        }
      },
      "38": {
        start: {
          line: 111,
          column: 27
        },
        end: {
          line: 111,
          column: 82
        }
      },
      "39": {
        start: {
          line: 113,
          column: 2
        },
        end: {
          line: 123,
          column: 3
        }
      },
      "40": {
        start: {
          line: 114,
          column: 22
        },
        end: {
          line: 116,
          column: 6
        }
      },
      "41": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "42": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 102
        }
      },
      "43": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 56
        }
      },
      "44": {
        start: {
          line: 125,
          column: 2
        },
        end: {
          line: 129,
          column: 3
        }
      },
      "45": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 131
        }
      },
      "46": {
        start: {
          line: 126,
          column: 35
        },
        end: {
          line: 126,
          column: 131
        }
      },
      "47": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 88
        }
      },
      "48": {
        start: {
          line: 131,
          column: 2
        },
        end: {
          line: 131,
          column: 28
        }
      },
      "49": {
        start: {
          line: 153,
          column: 2
        },
        end: {
          line: 242,
          column: 4
        }
      },
      "50": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 12
        }
      },
      "51": {
        start: {
          line: 175,
          column: 25
        },
        end: {
          line: 175,
          column: 27
        }
      },
      "52": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "53": {
        start: {
          line: 178,
          column: 6
        },
        end: {
          line: 178,
          column: 44
        }
      },
      "54": {
        start: {
          line: 180,
          column: 18
        },
        end: {
          line: 180,
          column: 41
        }
      },
      "55": {
        start: {
          line: 182,
          column: 23
        },
        end: {
          line: 182,
          column: 75
        }
      },
      "56": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 98
        }
      },
      "57": {
        start: {
          line: 184,
          column: 17
        },
        end: {
          line: 184,
          column: 96
        }
      },
      "58": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 157
        }
      },
      "59": {
        start: {
          line: 188,
          column: 31
        },
        end: {
          line: 194,
          column: 6
        }
      },
      "60": {
        start: {
          line: 196,
          column: 25
        },
        end: {
          line: 196,
          column: 95
        }
      },
      "61": {
        start: {
          line: 197,
          column: 24
        },
        end: {
          line: 197,
          column: 41
        }
      },
      "62": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 198,
          column: 33
        }
      },
      "63": {
        start: {
          line: 199,
          column: 33
        },
        end: {
          line: 199,
          column: 85
        }
      },
      "64": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 200,
          column: 67
        }
      },
      "65": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "66": {
        start: {
          line: 203,
          column: 6
        },
        end: {
          line: 208,
          column: 8
        }
      },
      "67": {
        start: {
          line: 205,
          column: 23
        },
        end: {
          line: 207,
          column: 89
        }
      },
      "68": {
        start: {
          line: 211,
          column: 28
        },
        end: {
          line: 211,
          column: 87
        }
      },
      "69": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 230,
          column: 8
        }
      },
      "70": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 241,
          column: 7
        }
      },
      "71": {
        start: {
          line: 245,
          column: 0
        },
        end: {
          line: 249,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "updateSnapshotState",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 28
          }
        },
        loc: {
          start: {
            line: 27,
            column: 74
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 27
      },
      "1": {
        name: "checkResult",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 20
          }
        },
        loc: {
          start: {
            line: 43,
            column: 3
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 43
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 17
          }
        },
        loc: {
          start: {
            line: 69,
            column: 22
          },
          end: {
            line: 91,
            column: 7
          }
        },
        line: 69
      },
      "3": {
        name: "createSnapshotIdentifier",
        decl: {
          start: {
            line: 101,
            column: 9
          },
          end: {
            line: 101,
            column: 33
          }
        },
        loc: {
          start: {
            line: 107,
            column: 3
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 107
      },
      "4": {
        name: "configureToMatchImageSnapshot",
        decl: {
          start: {
            line: 134,
            column: 9
          },
          end: {
            line: 134,
            column: 38
          }
        },
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 243,
            column: 1
          }
        },
        line: 152
      },
      "5": {
        name: "toMatchImageSnapshot",
        decl: {
          start: {
            line: 153,
            column: 18
          },
          end: {
            line: 153,
            column: 38
          }
        },
        loc: {
          start: {
            line: 171,
            column: 10
          },
          end: {
            line: 242,
            column: 3
          }
        },
        line: 171
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 205,
            column: 17
          },
          end: {
            line: 205,
            column: 18
          }
        },
        loc: {
          start: {
            line: 205,
            column: 23
          },
          end: {
            line: 207,
            column: 89
          }
        },
        line: 205
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 2
          },
          end: {
            line: 93,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 2
          },
          end: {
            line: 93,
            column: 3
          }
        }, {
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 93,
            column: 3
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 93,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 93,
            column: 3
          }
        }, {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 93,
            column: 3
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        }, {
          start: {
            line: 62,
            column: 11
          },
          end: {
            line: 92,
            column: 5
          }
        }],
        line: 60
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 6
          },
          end: {
            line: 66,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 6
          },
          end: {
            line: 66,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 64,
            column: 10
          },
          end: {
            line: 64,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 10
          },
          end: {
            line: 64,
            column: 21
          }
        }, {
          start: {
            line: 64,
            column: 26
          },
          end: {
            line: 64,
            column: 49
          }
        }],
        line: 64
      },
      "6": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: 73,
            column: 15
          },
          end: {
            line: 75,
            column: 9
          }
        }],
        line: 71
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 27
          }
        }, {
          start: {
            line: 71,
            column: 31
          },
          end: {
            line: 71,
            column: 49
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: 86,
            column: 15
          },
          end: {
            line: 88,
            column: 9
          }
        }],
        line: 84
      },
      "9": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 135
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 35
          }
        }, {
          start: {
            line: 84,
            column: 40
          },
          end: {
            line: 84,
            column: 95
          }
        }, {
          start: {
            line: 84,
            column: 99
          },
          end: {
            line: 84,
            column: 134
          }
        }],
        line: 84
      },
      "10": {
        loc: {
          start: {
            line: 86,
            column: 15
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 15
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "11": {
        loc: {
          start: {
            line: 86,
            column: 19
          },
          end: {
            line: 86,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 19
          },
          end: {
            line: 86,
            column: 36
          }
        }, {
          start: {
            line: 86,
            column: 40
          },
          end: {
            line: 86,
            column: 63
          }
        }],
        line: 86
      },
      "12": {
        loc: {
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 51
          }
        }, {
          start: {
            line: 111,
            column: 55
          },
          end: {
            line: 111,
            column: 82
          }
        }],
        line: 111
      },
      "13": {
        loc: {
          start: {
            line: 113,
            column: 2
          },
          end: {
            line: 123,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 2
          },
          end: {
            line: 123,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "14": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "15": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 118,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 118,
            column: 18
          }
        }, {
          start: {
            line: 118,
            column: 22
          },
          end: {
            line: 118,
            column: 32
          }
        }],
        line: 118
      },
      "16": {
        loc: {
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 122,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 122,
            column: 34
          }
        }, {
          start: {
            line: 122,
            column: 38
          },
          end: {
            line: 122,
            column: 55
          }
        }],
        line: 122
      },
      "17": {
        loc: {
          start: {
            line: 125,
            column: 2
          },
          end: {
            line: 129,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 2
          },
          end: {
            line: 129,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "18": {
        loc: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 131
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 131
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "19": {
        loc: {
          start: {
            line: 128,
            column: 41
          },
          end: {
            line: 128,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 41
          },
          end: {
            line: 128,
            column: 76
          }
        }, {
          start: {
            line: 128,
            column: 80
          },
          end: {
            line: 128,
            column: 81
          }
        }],
        line: 128
      },
      "20": {
        loc: {
          start: {
            line: 134,
            column: 39
          },
          end: {
            line: 152,
            column: 6
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 6
          }
        }],
        line: 134
      },
      "21": {
        loc: {
          start: {
            line: 135,
            column: 20
          },
          end: {
            line: 135,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 135,
            column: 45
          },
          end: {
            line: 135,
            column: 47
          }
        }],
        line: 135
      },
      "22": {
        loc: {
          start: {
            line: 138,
            column: 26
          },
          end: {
            line: 138,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 138,
            column: 57
          },
          end: {
            line: 138,
            column: 62
          }
        }],
        line: 138
      },
      "23": {
        loc: {
          start: {
            line: 141,
            column: 17
          },
          end: {
            line: 141,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 141,
            column: 39
          },
          end: {
            line: 141,
            column: 51
          }
        }],
        line: 141
      },
      "24": {
        loc: {
          start: {
            line: 143,
            column: 20
          },
          end: {
            line: 143,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 143,
            column: 45
          },
          end: {
            line: 143,
            column: 46
          }
        }],
        line: 143
      },
      "25": {
        loc: {
          start: {
            line: 144,
            column: 24
          },
          end: {
            line: 144,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 144,
            column: 53
          },
          end: {
            line: 144,
            column: 60
          }
        }],
        line: 144
      },
      "26": {
        loc: {
          start: {
            line: 145,
            column: 24
          },
          end: {
            line: 145,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 145,
            column: 53
          },
          end: {
            line: 145,
            column: 58
          }
        }],
        line: 145
      },
      "27": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 146,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 146,
            column: 21
          },
          end: {
            line: 146,
            column: 22
          }
        }],
        line: 146
      },
      "28": {
        loc: {
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 147,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 147,
            column: 37
          },
          end: {
            line: 147,
            column: 42
          }
        }],
        line: 147
      },
      "29": {
        loc: {
          start: {
            line: 148,
            column: 21
          },
          end: {
            line: 148,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 148,
            column: 47
          },
          end: {
            line: 148,
            column: 52
          }
        }],
        line: 148
      },
      "30": {
        loc: {
          start: {
            line: 149,
            column: 27
          },
          end: {
            line: 149,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 149,
            column: 59
          },
          end: {
            line: 149,
            column: 64
          }
        }],
        line: 149
      },
      "31": {
        loc: {
          start: {
            line: 150,
            column: 21
          },
          end: {
            line: 150,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 150,
            column: 47
          },
          end: {
            line: 150,
            column: 52
          }
        }],
        line: 150
      },
      "32": {
        loc: {
          start: {
            line: 151,
            column: 20
          },
          end: {
            line: 151,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 151,
            column: 45
          },
          end: {
            line: 151,
            column: 57
          }
        }],
        line: 151
      },
      "33": {
        loc: {
          start: {
            line: 153,
            column: 49
          },
          end: {
            line: 171,
            column: 8
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 171,
            column: 6
          },
          end: {
            line: 171,
            column: 8
          }
        }],
        line: 153
      },
      "34": {
        loc: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 154,
            column: 31
          },
          end: {
            line: 154,
            column: 61
          }
        }],
        line: 154
      },
      "35": {
        loc: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 155,
            column: 25
          },
          end: {
            line: 155,
            column: 49
          }
        }],
        line: 155
      },
      "36": {
        loc: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 156,
            column: 29
          },
          end: {
            line: 156,
            column: 57
          }
        }],
        line: 156
      },
      "37": {
        loc: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 157,
            column: 24
          },
          end: {
            line: 157,
            column: 47
          }
        }],
        line: 157
      },
      "38": {
        loc: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 158,
            column: 20
          },
          end: {
            line: 158,
            column: 39
          }
        }],
        line: 158
      },
      "39": {
        loc: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 159,
            column: 20
          },
          end: {
            line: 159,
            column: 39
          }
        }],
        line: 159
      },
      "40": {
        loc: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 160,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 160,
            column: 23
          },
          end: {
            line: 160,
            column: 25
          }
        }],
        line: 160
      },
      "41": {
        loc: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 161,
            column: 15
          },
          end: {
            line: 161,
            column: 29
          }
        }],
        line: 161
      },
      "42": {
        loc: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 162,
            column: 23
          },
          end: {
            line: 162,
            column: 45
          }
        }],
        line: 162
      },
      "43": {
        loc: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 163,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 163,
            column: 27
          },
          end: {
            line: 163,
            column: 53
          }
        }],
        line: 163
      },
      "44": {
        loc: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 164,
            column: 27
          },
          end: {
            line: 164,
            column: 53
          }
        }],
        line: 164
      },
      "45": {
        loc: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 165,
            column: 11
          },
          end: {
            line: 165,
            column: 21
          }
        }],
        line: 165
      },
      "46": {
        loc: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 166,
            column: 37
          }
        }],
        line: 166
      },
      "47": {
        loc: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 167,
            column: 24
          },
          end: {
            line: 167,
            column: 47
          }
        }],
        line: 167
      },
      "48": {
        loc: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 168,
            column: 30
          },
          end: {
            line: 168,
            column: 59
          }
        }],
        line: 168
      },
      "49": {
        loc: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 169,
            column: 24
          },
          end: {
            line: 169,
            column: 47
          }
        }],
        line: 169
      },
      "50": {
        loc: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 170,
            column: 23
          },
          end: {
            line: 170,
            column: 45
          }
        }],
        line: 170
      },
      "51": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "52": {
        loc: {
          start: {
            line: 178,
            column: 27
          },
          end: {
            line: 178,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 178,
            column: 38
          },
          end: {
            line: 178,
            column: 39
          }
        }, {
          start: {
            line: 178,
            column: 42
          },
          end: {
            line: 178,
            column: 43
          }
        }],
        line: 178
      },
      "53": {
        loc: {
          start: {
            line: 182,
            column: 23
          },
          end: {
            line: 182,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 23
          },
          end: {
            line: 182,
            column: 70
          }
        }, {
          start: {
            line: 182,
            column: 74
          },
          end: {
            line: 182,
            column: 75
          }
        }],
        line: 182
      },
      "54": {
        loc: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 98
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 98
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "55": {
        loc: {
          start: {
            line: 186,
            column: 98
          },
          end: {
            line: 186,
            column: 147
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 98
          },
          end: {
            line: 186,
            column: 142
          }
        }, {
          start: {
            line: 186,
            column: 146
          },
          end: {
            line: 186,
            column: 147
          }
        }],
        line: 186
      },
      "56": {
        loc: {
          start: {
            line: 196,
            column: 25
          },
          end: {
            line: 196,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 25
          },
          end: {
            line: 196,
            column: 43
          }
        }, {
          start: {
            line: 196,
            column: 47
          },
          end: {
            line: 196,
            column: 95
          }
        }],
        line: 196
      },
      "57": {
        loc: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "58": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 202,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 202,
            column: 48
          }
        }, {
          start: {
            line: 202,
            column: 52
          },
          end: {
            line: 202,
            column: 88
          }
        }],
        line: 202
      },
      "59": {
        loc: {
          start: {
            line: 211,
            column: 28
          },
          end: {
            line: 211,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 211,
            column: 43
          },
          end: {
            line: 211,
            column: 62
          }
        }, {
          start: {
            line: 211,
            column: 65
          },
          end: {
            line: 211,
            column: 87
          }
        }],
        line: 211
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0],
      "22": [0],
      "23": [0],
      "24": [0],
      "25": [0],
      "26": [0],
      "27": [0],
      "28": [0],
      "29": [0],
      "30": [0],
      "31": [0],
      "32": [0],
      "33": [0],
      "34": [0],
      "35": [0],
      "36": [0],
      "37": [0],
      "38": [0],
      "39": [0],
      "40": [0],
      "41": [0],
      "42": [0],
      "43": [0],
      "44": [0],
      "45": [0],
      "46": [0],
      "47": [0],
      "48": [0],
      "49": [0],
      "50": [0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "77c1eff393762774119f60ed3a423ed83de66e3a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1e2g1rljrj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1e2g1rljrj();
/*
 * Copyright (c) 2017 American Express Travel Related Services Company, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/* eslint-disable no-underscore-dangle */
const kebabCase =
/* istanbul ignore next */
(cov_1e2g1rljrj().s[0]++, require('lodash/kebabCase'));
const merge =
/* istanbul ignore next */
(cov_1e2g1rljrj().s[1]++, require('lodash/merge'));
const path =
/* istanbul ignore next */
(cov_1e2g1rljrj().s[2]++, require('path'));
const Chalk =
/* istanbul ignore next */
(cov_1e2g1rljrj().s[3]++, require('chalk').Instance);
const {
  diffImageToSnapshot,
  runDiffImageToSnapshot
} =
/* istanbul ignore next */
(cov_1e2g1rljrj().s[4]++, require('./diff-snapshot'));
const fs =
/* istanbul ignore next */
(cov_1e2g1rljrj().s[5]++, require('fs'));
const OutdatedSnapshotReporter =
/* istanbul ignore next */
(cov_1e2g1rljrj().s[6]++, require('./outdated-snapshot-reporter'));
const timesCalled =
/* istanbul ignore next */
(cov_1e2g1rljrj().s[7]++, new Map());
const SNAPSHOTS_DIR =
/* istanbul ignore next */
(cov_1e2g1rljrj().s[8]++, '__image_snapshots__');
function updateSnapshotState(originalSnapshotState, partialSnapshotState) {
  /* istanbul ignore next */
  cov_1e2g1rljrj().f[0]++;
  cov_1e2g1rljrj().s[9]++;
  if (global.UNSTABLE_SKIP_REPORTING) {
    /* istanbul ignore next */
    cov_1e2g1rljrj().b[0][0]++;
    cov_1e2g1rljrj().s[10]++;
    return originalSnapshotState;
  } else
  /* istanbul ignore next */
  {
    cov_1e2g1rljrj().b[0][1]++;
  }
  cov_1e2g1rljrj().s[11]++;
  return merge(originalSnapshotState, partialSnapshotState);
}
function checkResult({
  result,
  snapshotState,
  retryTimes,
  snapshotIdentifier,
  chalk,
  dumpDiffToConsole,
  dumpInlineDiffToConsole,
  allowSizeMismatch
}) {
  /* istanbul ignore next */
  cov_1e2g1rljrj().f[1]++;
  let pass =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().s[12]++, true);
  /*
    istanbul ignore next
    `message` is implementation detail. Actual behavior is tested in integration.spec.js
  */
  let message = () => '';
  /* istanbul ignore next */
  cov_1e2g1rljrj().s[13]++;
  if (result.updated) {
    /* istanbul ignore next */
    cov_1e2g1rljrj().b[1][0]++;
    cov_1e2g1rljrj().s[14]++;
    // once transition away from jasmine is done this will be a lot more elegant and pure
    // https://github.com/facebook/jest/pull/3668
    updateSnapshotState(snapshotState, {
      updated: snapshotState.updated + 1
    });
  } else {
    /* istanbul ignore next */
    cov_1e2g1rljrj().b[1][1]++;
    cov_1e2g1rljrj().s[15]++;
    if (result.added) {
      /* istanbul ignore next */
      cov_1e2g1rljrj().b[2][0]++;
      cov_1e2g1rljrj().s[16]++;
      updateSnapshotState(snapshotState, {
        added: snapshotState.added + 1
      });
    } else {
      /* istanbul ignore next */
      cov_1e2g1rljrj().b[2][1]++;
      cov_1e2g1rljrj().s[17]++;
      ({
        pass
      } = result);
      /* istanbul ignore next */
      cov_1e2g1rljrj().s[18]++;
      if (pass) {
        /* istanbul ignore next */
        cov_1e2g1rljrj().b[3][0]++;
        cov_1e2g1rljrj().s[19]++;
        updateSnapshotState(snapshotState, {
          matched: snapshotState.matched + 1
        });
      } else {
        /* istanbul ignore next */
        cov_1e2g1rljrj().b[3][1]++;
        const currentRun =
        /* istanbul ignore next */
        (cov_1e2g1rljrj().s[20]++, timesCalled.get(snapshotIdentifier));
        /* istanbul ignore next */
        cov_1e2g1rljrj().s[21]++;
        if (
        /* istanbul ignore next */
        (cov_1e2g1rljrj().b[5][0]++, !retryTimes) ||
        /* istanbul ignore next */
        (cov_1e2g1rljrj().b[5][1]++, currentRun > retryTimes)) {
          /* istanbul ignore next */
          cov_1e2g1rljrj().b[4][0]++;
          cov_1e2g1rljrj().s[22]++;
          updateSnapshotState(snapshotState, {
            unmatched: snapshotState.unmatched + 1
          });
        } else
        /* istanbul ignore next */
        {
          cov_1e2g1rljrj().b[4][1]++;
        }
        const differencePercentage =
        /* istanbul ignore next */
        (cov_1e2g1rljrj().s[23]++, result.diffRatio * 100);
        /* istanbul ignore next */
        cov_1e2g1rljrj().s[24]++;
        message = () => {
          /* istanbul ignore next */
          cov_1e2g1rljrj().f[2]++;
          let failure;
          /* istanbul ignore next */
          cov_1e2g1rljrj().s[25]++;
          if (
          /* istanbul ignore next */
          (cov_1e2g1rljrj().b[7][0]++, result.diffSize) &&
          /* istanbul ignore next */
          (cov_1e2g1rljrj().b[7][1]++, !allowSizeMismatch)) {
            /* istanbul ignore next */
            cov_1e2g1rljrj().b[6][0]++;
            cov_1e2g1rljrj().s[26]++;
            failure = `Expected image to be the same size as the snapshot (${result.imageDimensions.baselineWidth}x${result.imageDimensions.baselineHeight}), but was different (${result.imageDimensions.receivedWidth}x${result.imageDimensions.receivedHeight}).\n`;
          } else {
            /* istanbul ignore next */
            cov_1e2g1rljrj().b[6][1]++;
            cov_1e2g1rljrj().s[27]++;
            failure = `Expected image to match or be a close match to snapshot but was ${differencePercentage}% different from snapshot (${result.diffPixelCount} differing pixels).\n`;
          }
          /* istanbul ignore next */
          cov_1e2g1rljrj().s[28]++;
          failure += `${chalk.bold.red('See diff for details:')} ${chalk.red(result.diffOutputPath)}`;
          const supportedInlineTerms =
          /* istanbul ignore next */
          (cov_1e2g1rljrj().s[29]++, ['iTerm.app', 'WezTerm']);
          /* istanbul ignore next */
          cov_1e2g1rljrj().s[30]++;
          if (
          /* istanbul ignore next */
          (cov_1e2g1rljrj().b[9][0]++, dumpInlineDiffToConsole) && (
          /* istanbul ignore next */
          (cov_1e2g1rljrj().b[9][1]++, supportedInlineTerms.includes(process.env.TERM_PROGRAM)) ||
          /* istanbul ignore next */
          (cov_1e2g1rljrj().b[9][2]++, 'ENABLE_INLINE_DIFF' in process.env))) {
            /* istanbul ignore next */
            cov_1e2g1rljrj().b[8][0]++;
            cov_1e2g1rljrj().s[31]++;
            failure += `\n\n\t\x1b]1337;File=name=${Buffer.from(result.diffOutputPath).toString('base64')};inline=1;width=40:${result.imgSrcString.replace('data:image/png;base64,', '')}\x07\x1b\n\n`;
          } else {
            /* istanbul ignore next */
            cov_1e2g1rljrj().b[8][1]++;
            cov_1e2g1rljrj().s[32]++;
            if (
            /* istanbul ignore next */
            (cov_1e2g1rljrj().b[11][0]++, dumpDiffToConsole) ||
            /* istanbul ignore next */
            (cov_1e2g1rljrj().b[11][1]++, dumpInlineDiffToConsole)) {
              /* istanbul ignore next */
              cov_1e2g1rljrj().b[10][0]++;
              cov_1e2g1rljrj().s[33]++;
              failure += `\n${chalk.bold.red('Or paste below image diff string to your browser`s URL bar.')}\n ${result.imgSrcString}`;
            } else
            /* istanbul ignore next */
            {
              cov_1e2g1rljrj().b[10][1]++;
            }
          }
          /* istanbul ignore next */
          cov_1e2g1rljrj().s[34]++;
          return failure;
        };
      }
    }
  }
  /* istanbul ignore next */
  cov_1e2g1rljrj().s[35]++;
  return {
    message,
    pass
  };
}
function createSnapshotIdentifier({
  retryTimes,
  testPath,
  currentTestName,
  customSnapshotIdentifier,
  snapshotState
}) {
  /* istanbul ignore next */
  cov_1e2g1rljrj().f[3]++;
  const counter =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().s[36]++, snapshotState._counters.get(currentTestName));
  const defaultIdentifier =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().s[37]++, kebabCase(`${path.basename(testPath)}-${currentTestName}-${counter}`));
  let snapshotIdentifier =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().s[38]++,
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[12][0]++, customSnapshotIdentifier) ||
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[12][1]++, `${defaultIdentifier}-snap`));
  /* istanbul ignore next */
  cov_1e2g1rljrj().s[39]++;
  if (typeof customSnapshotIdentifier === 'function') {
    /* istanbul ignore next */
    cov_1e2g1rljrj().b[13][0]++;
    const customRes =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().s[40]++, customSnapshotIdentifier({
      testPath,
      currentTestName,
      counter,
      defaultIdentifier
    }));
    /* istanbul ignore next */
    cov_1e2g1rljrj().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[15][0]++, retryTimes) &&
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[15][1]++, !customRes)) {
      /* istanbul ignore next */
      cov_1e2g1rljrj().b[14][0]++;
      cov_1e2g1rljrj().s[42]++;
      throw new Error('A unique customSnapshotIdentifier must be set when jest.retryTimes() is used');
    } else
    /* istanbul ignore next */
    {
      cov_1e2g1rljrj().b[14][1]++;
    }
    cov_1e2g1rljrj().s[43]++;
    snapshotIdentifier =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[16][0]++, customRes) ||
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[16][1]++, defaultIdentifier);
  } else
  /* istanbul ignore next */
  {
    cov_1e2g1rljrj().b[13][1]++;
  }
  cov_1e2g1rljrj().s[44]++;
  if (retryTimes) {
    /* istanbul ignore next */
    cov_1e2g1rljrj().b[17][0]++;
    cov_1e2g1rljrj().s[45]++;
    if (!customSnapshotIdentifier) {
      /* istanbul ignore next */
      cov_1e2g1rljrj().b[18][0]++;
      cov_1e2g1rljrj().s[46]++;
      throw new Error('A unique customSnapshotIdentifier must be set when jest.retryTimes() is used');
    } else
    /* istanbul ignore next */
    {
      cov_1e2g1rljrj().b[18][1]++;
    }
    cov_1e2g1rljrj().s[47]++;
    timesCalled.set(snapshotIdentifier, (
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[19][0]++, timesCalled.get(snapshotIdentifier)) ||
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[19][1]++, 0)) + 1);
  } else
  /* istanbul ignore next */
  {
    cov_1e2g1rljrj().b[17][1]++;
  }
  cov_1e2g1rljrj().s[48]++;
  return snapshotIdentifier;
}
function configureToMatchImageSnapshot({
  customDiffConfig: commonCustomDiffConfig =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[21][0]++, {}),
  customSnapshotIdentifier: commonCustomSnapshotIdentifier,
  customSnapshotsDir: commonCustomSnapshotsDir,
  storeReceivedOnFailure: commonStoreReceivedOnFailure =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[22][0]++, false),
  customReceivedDir: commonCustomReceivedDir,
  customDiffDir: commonCustomDiffDir,
  diffDirection: commonDiffDirection =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[23][0]++, 'horizontal'),
  noColors: commonNoColors,
  failureThreshold: commonFailureThreshold =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[24][0]++, 0),
  failureThresholdType: commonFailureThresholdType =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[25][0]++, 'pixel'),
  updatePassedSnapshot: commonUpdatePassedSnapshot =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[26][0]++, false),
  blur: commonBlur =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[27][0]++, 0),
  runInProcess: commonRunInProcess =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[28][0]++, false),
  dumpDiffToConsole: commonDumpDiffToConsole =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[29][0]++, false),
  dumpInlineDiffToConsole: commonDumpInlineDiffToConsole =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[30][0]++, false),
  allowSizeMismatch: commonAllowSizeMismatch =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[31][0]++, false),
  comparisonMethod: commonComparisonMethod =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[32][0]++, 'pixelmatch')
} =
/* istanbul ignore next */
(cov_1e2g1rljrj().b[20][0]++, {})) {
  /* istanbul ignore next */
  cov_1e2g1rljrj().f[4]++;
  cov_1e2g1rljrj().s[49]++;
  return function toMatchImageSnapshot(received, {
    customSnapshotIdentifier =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[34][0]++, commonCustomSnapshotIdentifier),
    customSnapshotsDir =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[35][0]++, commonCustomSnapshotsDir),
    storeReceivedOnFailure =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[36][0]++, commonStoreReceivedOnFailure),
    customReceivedDir =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[37][0]++, commonCustomReceivedDir),
    customDiffDir =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[38][0]++, commonCustomDiffDir),
    diffDirection =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[39][0]++, commonDiffDirection),
    customDiffConfig =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[40][0]++, {}),
    noColors =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[41][0]++, commonNoColors),
    failureThreshold =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[42][0]++, commonFailureThreshold),
    failureThresholdType =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[43][0]++, commonFailureThresholdType),
    updatePassedSnapshot =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[44][0]++, commonUpdatePassedSnapshot),
    blur =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[45][0]++, commonBlur),
    runInProcess =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[46][0]++, commonRunInProcess),
    dumpDiffToConsole =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[47][0]++, commonDumpDiffToConsole),
    dumpInlineDiffToConsole =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[48][0]++, commonDumpInlineDiffToConsole),
    allowSizeMismatch =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[49][0]++, commonAllowSizeMismatch),
    comparisonMethod =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[50][0]++, commonComparisonMethod)
  } =
  /* istanbul ignore next */
  (cov_1e2g1rljrj().b[33][0]++, {})) {
    /* istanbul ignore next */
    cov_1e2g1rljrj().f[5]++;
    const {
      testPath,
      currentTestName,
      isNot,
      snapshotState
    } =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().s[50]++, this);
    const chalkOptions =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().s[51]++, {});
    /* istanbul ignore next */
    cov_1e2g1rljrj().s[52]++;
    if (typeof noColors !== 'undefined') {
      /* istanbul ignore next */
      cov_1e2g1rljrj().b[51][0]++;
      cov_1e2g1rljrj().s[53]++;
      // 1 means basic ANSI 16-color support, 0 means no support
      chalkOptions.level = noColors ?
      /* istanbul ignore next */
      (cov_1e2g1rljrj().b[52][0]++, 0) :
      /* istanbul ignore next */
      (cov_1e2g1rljrj().b[52][1]++, 1);
    } else
    /* istanbul ignore next */
    {
      cov_1e2g1rljrj().b[51][1]++;
    }
    const chalk =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().s[54]++, new Chalk(chalkOptions));
    const retryTimes =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().s[55]++,
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[53][0]++, parseInt(global[Symbol.for('RETRY_TIMES')], 10)) ||
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[53][1]++, 0));
    /* istanbul ignore next */
    cov_1e2g1rljrj().s[56]++;
    if (isNot) {
      /* istanbul ignore next */
      cov_1e2g1rljrj().b[54][0]++;
      cov_1e2g1rljrj().s[57]++;
      throw new Error('Jest: `.not` cannot be used with `.toMatchImageSnapshot()`.');
    } else
    /* istanbul ignore next */
    {
      cov_1e2g1rljrj().b[54][1]++;
    }
    cov_1e2g1rljrj().s[58]++;
    updateSnapshotState(snapshotState, {
      _counters: snapshotState._counters.set(currentTestName, (
      /* istanbul ignore next */
      (cov_1e2g1rljrj().b[55][0]++, snapshotState._counters.get(currentTestName)) ||
      /* istanbul ignore next */
      (cov_1e2g1rljrj().b[55][1]++, 0)) + 1)
    }); // eslint-disable-line max-len

    const snapshotIdentifier =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().s[59]++, createSnapshotIdentifier({
      retryTimes,
      testPath,
      currentTestName,
      customSnapshotIdentifier,
      snapshotState
    }));
    const snapshotsDir =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().s[60]++,
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[56][0]++, customSnapshotsDir) ||
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[56][1]++, path.join(path.dirname(testPath), SNAPSHOTS_DIR)));
    const receivedDir =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().s[61]++, customReceivedDir);
    const diffDir =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().s[62]++, customDiffDir);
    const baselineSnapshotPath =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().s[63]++, path.join(snapshotsDir, `${snapshotIdentifier}.png`));
    /* istanbul ignore next */
    cov_1e2g1rljrj().s[64]++;
    OutdatedSnapshotReporter.markTouchedFile(baselineSnapshotPath);
    /* istanbul ignore next */
    cov_1e2g1rljrj().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[58][0]++, snapshotState._updateSnapshot === 'none') &&
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[58][1]++, !fs.existsSync(baselineSnapshotPath))) {
      /* istanbul ignore next */
      cov_1e2g1rljrj().b[57][0]++;
      cov_1e2g1rljrj().s[66]++;
      return {
        pass: false,
        message: () => {
          /* istanbul ignore next */
          cov_1e2g1rljrj().f[6]++;
          cov_1e2g1rljrj().s[67]++;
          return `New snapshot was ${chalk.bold.red('not written')}. The update flag must be explicitly ` + 'passed to write a new snapshot.\n\n + This is likely because this test is run in a continuous ' + 'integration (CI) environment in which snapshots are not written by default.\n\n';
        }
      };
    } else
    /* istanbul ignore next */
    {
      cov_1e2g1rljrj().b[57][1]++;
    }
    const imageToSnapshot =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().s[68]++, runInProcess ?
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[59][0]++, diffImageToSnapshot) :
    /* istanbul ignore next */
    (cov_1e2g1rljrj().b[59][1]++, runDiffImageToSnapshot));
    const result =
    /* istanbul ignore next */
    (cov_1e2g1rljrj().s[69]++, imageToSnapshot({
      receivedImageBuffer: received,
      snapshotsDir,
      storeReceivedOnFailure,
      receivedDir,
      diffDir,
      diffDirection,
      snapshotIdentifier,
      updateSnapshot: snapshotState._updateSnapshot === 'all',
      customDiffConfig: Object.assign({}, commonCustomDiffConfig, customDiffConfig),
      failureThreshold,
      failureThresholdType,
      updatePassedSnapshot,
      blur,
      allowSizeMismatch,
      comparisonMethod
    }));
    /* istanbul ignore next */
    cov_1e2g1rljrj().s[70]++;
    return checkResult({
      result,
      snapshotState,
      retryTimes,
      snapshotIdentifier,
      chalk,
      dumpDiffToConsole,
      dumpInlineDiffToConsole,
      allowSizeMismatch
    });
  };
}
/* istanbul ignore next */
cov_1e2g1rljrj().s[71]++;
module.exports = {
  toMatchImageSnapshot: configureToMatchImageSnapshot(),
  configureToMatchImageSnapshot,
  updateSnapshotState
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,