50a9384a0b2afcb80117e5e54aa3d9b7
/* istanbul ignore next */
function cov_1v4xpht49v() {
  var path = "/Users/matt.mcglade/Repo/dev/2022/10/jest-image-snapshot/src/diff-snapshot.js";
  var hash = "c9ddc899d6498548deba83b0fff894963e43676e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matt.mcglade/Repo/dev/2022/10/jest-image-snapshot/src/diff-snapshot.js",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 45
        }
      },
      "1": {
        start: {
          line: 16,
          column: 11
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "2": {
        start: {
          line: 17,
          column: 13
        },
        end: {
          line: 17,
          column: 28
        }
      },
      "3": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 32
        }
      },
      "4": {
        start: {
          line: 19,
          column: 19
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "5": {
        start: {
          line: 20,
          column: 13
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "6": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 32
        }
      },
      "7": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 32
        }
      },
      "8": {
        start: {
          line: 23,
          column: 13
        },
        end: {
          line: 23,
          column: 28
        }
      },
      "9": {
        start: {
          line: 24,
          column: 22
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "10": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "11": {
        start: {
          line: 29,
          column: 46
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "12": {
        start: {
          line: 30,
          column: 18
        },
        end: {
          line: 30,
          column: 56
        }
      },
      "13": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 31,
          column: 71
        }
      },
      "14": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 32,
          column: 17
        }
      },
      "15": {
        start: {
          line: 39,
          column: 27
        },
        end: {
          line: 53,
          column: 1
        }
      },
      "16": {
        start: {
          line: 39,
          column: 46
        },
        end: {
          line: 53,
          column: 1
        }
      },
      "17": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 40,
          column: 50
        }
      },
      "18": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 40,
          column: 50
        }
      },
      "19": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 51,
          column: 3
        }
      },
      "20": {
        start: {
          line: 41,
          column: 15
        },
        end: {
          line: 41,
          column: 16
        }
      },
      "21": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "22": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 42,
          column: 18
        }
      },
      "23": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 49,
          column: 7
        }
      },
      "24": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 48
        }
      },
      "25": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 28
        }
      },
      "26": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 32
        }
      },
      "27": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 32
        }
      },
      "28": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 33
        }
      },
      "29": {
        start: {
          line: 52,
          column: 2
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "30": {
        start: {
          line: 67,
          column: 36
        },
        end: {
          line: 69,
          column: 1
        }
      },
      "31": {
        start: {
          line: 83,
          column: 30
        },
        end: {
          line: 83,
          column: 51
        }
      },
      "32": {
        start: {
          line: 91,
          column: 18
        },
        end: {
          line: 122,
          column: 1
        }
      },
      "33": {
        start: {
          line: 99,
          column: 19
        },
        end: {
          line: 99,
          column: 81
        }
      },
      "34": {
        start: {
          line: 100,
          column: 24
        },
        end: {
          line: 100,
          column: 91
        }
      },
      "35": {
        start: {
          line: 102,
          column: 30
        },
        end: {
          line: 102,
          column: 76
        }
      },
      "36": {
        start: {
          line: 105,
          column: 21
        },
        end: {
          line: 105,
          column: 59
        }
      },
      "37": {
        start: {
          line: 106,
          column: 25
        },
        end: {
          line: 106,
          column: 85
        }
      },
      "38": {
        start: {
          line: 107,
          column: 2
        },
        end: {
          line: 120,
          column: 3
        }
      },
      "39": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 17
        }
      },
      "40": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "41": {
        start: {
          line: 108,
          column: 19
        },
        end: {
          line: 108,
          column: 20
        }
      },
      "42": {
        start: {
          line: 109,
          column: 19
        },
        end: {
          line: 109,
          column: 42
        }
      },
      "43": {
        start: {
          line: 112,
          column: 24
        },
        end: {
          line: 117,
          column: 58
        }
      },
      "44": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 118,
          column: 52
        }
      },
      "45": {
        start: {
          line: 121,
          column: 2
        },
        end: {
          line: 121,
          column: 20
        }
      },
      "46": {
        start: {
          line: 128,
          column: 30
        },
        end: {
          line: 147,
          column: 1
        }
      },
      "47": {
        start: {
          line: 130,
          column: 26
        },
        end: {
          line: 130,
          column: 42
        }
      },
      "48": {
        start: {
          line: 131,
          column: 27
        },
        end: {
          line: 131,
          column: 44
        }
      },
      "49": {
        start: {
          line: 132,
          column: 27
        },
        end: {
          line: 132,
          column: 44
        }
      },
      "50": {
        start: {
          line: 133,
          column: 28
        },
        end: {
          line: 133,
          column: 46
        }
      },
      "51": {
        start: {
          line: 135,
          column: 27
        },
        end: {
          line: 138,
          column: 3
        }
      },
      "52": {
        start: {
          line: 140,
          column: 23
        },
        end: {
          line: 140,
          column: 51
        }
      },
      "53": {
        start: {
          line: 141,
          column: 24
        },
        end: {
          line: 141,
          column: 53
        }
      },
      "54": {
        start: {
          line: 143,
          column: 2
        },
        end: {
          line: 146,
          column: 4
        }
      },
      "55": {
        start: {
          line: 149,
          column: 18
        },
        end: {
          line: 149,
          column: 72
        }
      },
      "56": {
        start: {
          line: 149,
          column: 48
        },
        end: {
          line: 149,
          column: 72
        }
      },
      "57": {
        start: {
          line: 151,
          column: 21
        },
        end: {
          line: 153,
          column: 1
        }
      },
      "58": {
        start: {
          line: 152,
          column: 2
        },
        end: {
          line: 152,
          column: 61
        }
      },
      "59": {
        start: {
          line: 155,
          column: 19
        },
        end: {
          line: 185,
          column: 1
        }
      },
      "60": {
        start: {
          line: 163,
          column: 13
        },
        end: {
          line: 163,
          column: 18
        }
      },
      "61": {
        start: {
          line: 164,
          column: 17
        },
        end: {
          line: 164,
          column: 22
        }
      },
      "62": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 165,
          column: 48
        }
      },
      "63": {
        start: {
          line: 166,
          column: 2
        },
        end: {
          line: 170,
          column: 3
        }
      },
      "64": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 168,
          column: 29
        }
      },
      "65": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 169,
          column: 20
        }
      },
      "66": {
        start: {
          line: 171,
          column: 2
        },
        end: {
          line: 179,
          column: 3
        }
      },
      "67": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "68": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 173,
          column: 48
        }
      },
      "69": {
        start: {
          line: 174,
          column: 11
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "70": {
        start: {
          line: 175,
          column: 6
        },
        end: {
          line: 175,
          column: 43
        }
      },
      "71": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 120
        }
      },
      "72": {
        start: {
          line: 180,
          column: 2
        },
        end: {
          line: 184,
          column: 4
        }
      },
      "73": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 204,
          column: 13
        }
      },
      "74": {
        start: {
          line: 206,
          column: 23
        },
        end: {
          line: 206,
          column: 75
        }
      },
      "75": {
        start: {
          line: 207,
          column: 15
        },
        end: {
          line: 207,
          column: 17
        }
      },
      "76": {
        start: {
          line: 208,
          column: 31
        },
        end: {
          line: 208,
          column: 83
        }
      },
      "77": {
        start: {
          line: 209,
          column: 2
        },
        end: {
          line: 334,
          column: 3
        }
      },
      "78": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 210,
          column: 52
        }
      },
      "79": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 211,
          column: 64
        }
      },
      "80": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 29
        }
      },
      "81": {
        start: {
          line: 214,
          column: 33
        },
        end: {
          line: 214,
          column: 93
        }
      },
      "82": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 215,
          column: 38
        }
      },
      "83": {
        start: {
          line: 217,
          column: 27
        },
        end: {
          line: 217,
          column: 79
        }
      },
      "84": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 218,
          column: 32
        }
      },
      "85": {
        start: {
          line: 220,
          column: 30
        },
        end: {
          line: 220,
          column: 111
        }
      },
      "86": {
        start: {
          line: 222,
          column: 23
        },
        end: {
          line: 222,
          column: 77
        }
      },
      "87": {
        start: {
          line: 224,
          column: 29
        },
        end: {
          line: 224,
          column: 63
        }
      },
      "88": {
        start: {
          line: 225,
          column: 29
        },
        end: {
          line: 225,
          column: 81
        }
      },
      "89": {
        start: {
          line: 227,
          column: 6
        },
        end: {
          line: 228,
          column: 55
        }
      },
      "90": {
        start: {
          line: 230,
          column: 28
        },
        end: {
          line: 235,
          column: 5
        }
      },
      "91": {
        start: {
          line: 237,
          column: 43
        },
        end: {
          line: 239,
          column: 44
        }
      },
      "92": {
        start: {
          line: 240,
          column: 23
        },
        end: {
          line: 240,
          column: 42
        }
      },
      "93": {
        start: {
          line: 241,
          column: 24
        },
        end: {
          line: 241,
          column: 44
        }
      },
      "94": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "95": {
        start: {
          line: 244,
          column: 6
        },
        end: {
          line: 244,
          column: 62
        }
      },
      "96": {
        start: {
          line: 245,
          column: 6
        },
        end: {
          line: 245,
          column: 62
        }
      },
      "97": {
        start: {
          line: 248,
          column: 22
        },
        end: {
          line: 248,
          column: 73
        }
      },
      "98": {
        start: {
          line: 250,
          column: 25
        },
        end: {
          line: 250,
          column: 26
        }
      },
      "99": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 259,
          column: 6
        }
      },
      "100": {
        start: {
          line: 261,
          column: 24
        },
        end: {
          line: 261,
          column: 48
        }
      },
      "101": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 274,
          column: 6
        }
      },
      "102": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 333,
          column: 5
        }
      },
      "103": {
        start: {
          line: 277,
          column: 6
        },
        end: {
          line: 281,
          column: 7
        }
      },
      "104": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 56
        }
      },
      "105": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 68
        }
      },
      "106": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 42
        }
      },
      "107": {
        start: {
          line: 283,
          column: 6
        },
        end: {
          line: 283,
          column: 48
        }
      },
      "108": {
        start: {
          line: 284,
          column: 23
        },
        end: {
          line: 286,
          column: 8
        }
      },
      "109": {
        start: {
          line: 288,
          column: 6
        },
        end: {
          line: 288,
          column: 64
        }
      },
      "110": {
        start: {
          line: 289,
          column: 6
        },
        end: {
          line: 289,
          column: 60
        }
      },
      "111": {
        start: {
          line: 290,
          column: 6
        },
        end: {
          line: 290,
          column: 64
        }
      },
      "112": {
        start: {
          line: 292,
          column: 29
        },
        end: {
          line: 292,
          column: 49
        }
      },
      "113": {
        start: {
          line: 294,
          column: 35
        },
        end: {
          line: 297,
          column: 8
        }
      },
      "114": {
        start: {
          line: 300,
          column: 6
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "115": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 304,
          column: 10
        }
      },
      "116": {
        start: {
          line: 308,
          column: 24
        },
        end: {
          line: 308,
          column: 79
        }
      },
      "117": {
        start: {
          line: 309,
          column: 6
        },
        end: {
          line: 309,
          column: 50
        }
      },
      "118": {
        start: {
          line: 311,
          column: 6
        },
        end: {
          line: 320,
          column: 8
        }
      },
      "119": {
        start: {
          line: 321,
          column: 11
        },
        end: {
          line: 333,
          column: 5
        }
      },
      "120": {
        start: {
          line: 322,
          column: 6
        },
        end: {
          line: 322,
          column: 54
        }
      },
      "121": {
        start: {
          line: 323,
          column: 6
        },
        end: {
          line: 323,
          column: 66
        }
      },
      "122": {
        start: {
          line: 324,
          column: 6
        },
        end: {
          line: 324,
          column: 33
        }
      },
      "123": {
        start: {
          line: 326,
          column: 6
        },
        end: {
          line: 332,
          column: 8
        }
      },
      "124": {
        start: {
          line: 335,
          column: 2
        },
        end: {
          line: 335,
          column: 16
        }
      },
      "125": {
        start: {
          line: 339,
          column: 2
        },
        end: {
          line: 339,
          column: 79
        }
      },
      "126": {
        start: {
          line: 341,
          column: 26
        },
        end: {
          line: 341,
          column: 49
        }
      },
      "127": {
        start: {
          line: 343,
          column: 15
        },
        end: {
          line: 343,
          column: 17
        }
      },
      "128": {
        start: {
          line: 345,
          column: 27
        },
        end: {
          line: 352,
          column: 3
        }
      },
      "129": {
        start: {
          line: 354,
          column: 2
        },
        end: {
          line: 359,
          column: 3
        }
      },
      "130": {
        start: {
          line: 355,
          column: 19
        },
        end: {
          line: 355,
          column: 56
        }
      },
      "131": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 356,
          column: 32
        }
      },
      "132": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 358,
          column: 130
        }
      },
      "133": {
        start: {
          line: 361,
          column: 2
        },
        end: {
          line: 361,
          column: 16
        }
      },
      "134": {
        start: {
          line: 364,
          column: 0
        },
        end: {
          line: 367,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 27
          },
          end: {
            line: 29,
            column: 28
          }
        },
        loc: {
          start: {
            line: 29,
            column: 46
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 46
          },
          end: {
            line: 29,
            column: 47
          }
        },
        loc: {
          start: {
            line: 29,
            column: 58
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 27
          },
          end: {
            line: 39,
            column: 28
          }
        },
        loc: {
          start: {
            line: 39,
            column: 46
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 39
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 39,
            column: 46
          },
          end: {
            line: 39,
            column: 47
          }
        },
        loc: {
          start: {
            line: 39,
            column: 57
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 39
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 18
          }
        },
        loc: {
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 40,
            column: 50
          }
        },
        line: 40
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 91,
            column: 18
          },
          end: {
            line: 91,
            column: 19
          }
        },
        loc: {
          start: {
            line: 98,
            column: 5
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 98
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 128,
            column: 30
          },
          end: {
            line: 128,
            column: 31
          }
        },
        loc: {
          start: {
            line: 128,
            column: 59
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 128
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 149,
            column: 18
          },
          end: {
            line: 149,
            column: 19
          }
        },
        loc: {
          start: {
            line: 149,
            column: 48
          },
          end: {
            line: 149,
            column: 72
          }
        },
        line: 149
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 151,
            column: 21
          },
          end: {
            line: 151,
            column: 22
          }
        },
        loc: {
          start: {
            line: 152,
            column: 2
          },
          end: {
            line: 152,
            column: 61
          }
        },
        line: 152
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 155,
            column: 19
          },
          end: {
            line: 155,
            column: 20
          }
        },
        loc: {
          start: {
            line: 162,
            column: 6
          },
          end: {
            line: 185,
            column: 1
          }
        },
        line: 162
      },
      "10": {
        name: "diffImageToSnapshot",
        decl: {
          start: {
            line: 187,
            column: 9
          },
          end: {
            line: 187,
            column: 28
          }
        },
        loc: {
          start: {
            line: 187,
            column: 38
          },
          end: {
            line: 336,
            column: 1
          }
        },
        line: 187
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 300,
            column: 36
          },
          end: {
            line: 300,
            column: 37
          }
        },
        loc: {
          start: {
            line: 300,
            column: 54
          },
          end: {
            line: 305,
            column: 7
          }
        },
        line: 300
      },
      "12": {
        name: "runDiffImageToSnapshot",
        decl: {
          start: {
            line: 338,
            column: 9
          },
          end: {
            line: 338,
            column: 31
          }
        },
        loc: {
          start: {
            line: 338,
            column: 41
          },
          end: {
            line: 362,
            column: 1
          }
        },
        line: 338
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 40,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 40,
            column: 37
          }
        }, {
          start: {
            line: 40,
            column: 41
          },
          end: {
            line: 40,
            column: 50
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 6
          },
          end: {
            line: 49,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 6
          },
          end: {
            line: 49,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 149,
            column: 48
          },
          end: {
            line: 149,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 48
          },
          end: {
            line: 149,
            column: 53
          }
        }, {
          start: {
            line: 149,
            column: 57
          },
          end: {
            line: 149,
            column: 72
          }
        }],
        line: 149
      },
      "3": {
        loc: {
          start: {
            line: 152,
            column: 2
          },
          end: {
            line: 152,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 3
          },
          end: {
            line: 152,
            column: 8
          }
        }, {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 152,
            column: 26
          }
        }, {
          start: {
            line: 152,
            column: 32
          },
          end: {
            line: 152,
            column: 36
          }
        }, {
          start: {
            line: 152,
            column: 40
          },
          end: {
            line: 152,
            column: 60
          }
        }],
        line: 152
      },
      "4": {
        loc: {
          start: {
            line: 166,
            column: 2
          },
          end: {
            line: 170,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 2
          },
          end: {
            line: 170,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "5": {
        loc: {
          start: {
            line: 171,
            column: 2
          },
          end: {
            line: 179,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 2
          },
          end: {
            line: 179,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "6": {
        loc: {
          start: {
            line: 171,
            column: 6
          },
          end: {
            line: 171,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 6
          },
          end: {
            line: 171,
            column: 15
          }
        }, {
          start: {
            line: 171,
            column: 19
          },
          end: {
            line: 171,
            column: 32
          }
        }],
        line: 171
      },
      "7": {
        loc: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        }, {
          start: {
            line: 174,
            column: 11
          },
          end: {
            line: 178,
            column: 5
          }
        }],
        line: 172
      },
      "8": {
        loc: {
          start: {
            line: 174,
            column: 11
          },
          end: {
            line: 178,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 11
          },
          end: {
            line: 178,
            column: 5
          }
        }, {
          start: {
            line: 176,
            column: 11
          },
          end: {
            line: 178,
            column: 5
          }
        }],
        line: 174
      },
      "9": {
        loc: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 193,
            column: 18
          },
          end: {
            line: 193,
            column: 72
          }
        }],
        line: 193
      },
      "10": {
        loc: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 194,
            column: 14
          },
          end: {
            line: 194,
            column: 64
          }
        }],
        line: 194
      },
      "11": {
        loc: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 196,
            column: 21
          },
          end: {
            line: 196,
            column: 26
          }
        }],
        line: 196
      },
      "12": {
        loc: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 197,
            column: 27
          },
          end: {
            line: 197,
            column: 32
          }
        }],
        line: 197
      },
      "13": {
        loc: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 198,
            column: 23
          },
          end: {
            line: 198,
            column: 25
          }
        }],
        line: 198
      },
      "14": {
        loc: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 202,
            column: 24
          },
          end: {
            line: 202,
            column: 29
          }
        }],
        line: 202
      },
      "15": {
        loc: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 203,
            column: 23
          },
          end: {
            line: 203,
            column: 35
          }
        }],
        line: 203
      },
      "16": {
        loc: {
          start: {
            line: 206,
            column: 23
          },
          end: {
            line: 206,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 206,
            column: 53
          },
          end: {
            line: 206,
            column: 62
          }
        }, {
          start: {
            line: 206,
            column: 65
          },
          end: {
            line: 206,
            column: 75
          }
        }],
        line: 206
      },
      "17": {
        loc: {
          start: {
            line: 209,
            column: 2
          },
          end: {
            line: 334,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 2
          },
          end: {
            line: 334,
            column: 3
          }
        }, {
          start: {
            line: 213,
            column: 9
          },
          end: {
            line: 334,
            column: 3
          }
        }],
        line: 209
      },
      "18": {
        loc: {
          start: {
            line: 220,
            column: 30
          },
          end: {
            line: 220,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 220,
            column: 60
          },
          end: {
            line: 220,
            column: 87
          }
        }, {
          start: {
            line: 220,
            column: 90
          },
          end: {
            line: 220,
            column: 111
          }
        }],
        line: 220
      },
      "19": {
        loc: {
          start: {
            line: 227,
            column: 6
          },
          end: {
            line: 228,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 6
          },
          end: {
            line: 227,
            column: 57
          }
        }, {
          start: {
            line: 228,
            column: 6
          },
          end: {
            line: 228,
            column: 55
          }
        }],
        line: 227
      },
      "20": {
        loc: {
          start: {
            line: 237,
            column: 43
          },
          end: {
            line: 239,
            column: 44
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 238,
            column: 65
          }
        }, {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 239,
            column: 44
          }
        }],
        line: 237
      },
      "21": {
        loc: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "22": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 243,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 243,
            column: 32
          }
        }, {
          start: {
            line: 243,
            column: 36
          },
          end: {
            line: 243,
            column: 44
          }
        }],
        line: 243
      },
      "23": {
        loc: {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        }, {
          start: {
            line: 321,
            column: 11
          },
          end: {
            line: 333,
            column: 5
          }
        }],
        line: 276
      },
      "24": {
        loc: {
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 281,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 281,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "25": {
        loc: {
          start: {
            line: 321,
            column: 11
          },
          end: {
            line: 333,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 11
          },
          end: {
            line: 333,
            column: 5
          }
        }, {
          start: {
            line: 325,
            column: 11
          },
          end: {
            line: 333,
            column: 5
          }
        }],
        line: 321
      },
      "26": {
        loc: {
          start: {
            line: 354,
            column: 2
          },
          end: {
            line: 359,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 2
          },
          end: {
            line: 359,
            column: 3
          }
        }, {
          start: {
            line: 357,
            column: 9
          },
          end: {
            line: 359,
            column: 3
          }
        }],
        line: 354
      },
      "27": {
        loc: {
          start: {
            line: 358,
            column: 49
          },
          end: {
            line: 358,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 358,
            column: 50
          },
          end: {
            line: 358,
            column: 72
          }
        }, {
          start: {
            line: 358,
            column: 76
          },
          end: {
            line: 358,
            column: 106
          }
        }, {
          start: {
            line: 358,
            column: 111
          },
          end: {
            line: 358,
            column: 126
          }
        }],
        line: 358
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0],
      "11": [0],
      "12": [0],
      "13": [0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c9ddc899d6498548deba83b0fff894963e43676e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1v4xpht49v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1v4xpht49v();
/*
 * Copyright (c) 2017 American Express Travel Related Services Company, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

const childProcess =
/* istanbul ignore next */
(cov_1v4xpht49v().s[0]++, require('child_process'));
const fs =
/* istanbul ignore next */
(cov_1v4xpht49v().s[1]++, require('fs'));
const path =
/* istanbul ignore next */
(cov_1v4xpht49v().s[2]++, require('path'));
const mkdirp =
/* istanbul ignore next */
(cov_1v4xpht49v().s[3]++, require('mkdirp'));
const pixelmatch =
/* istanbul ignore next */
(cov_1v4xpht49v().s[4]++, require('pixelmatch'));
const ssim =
/* istanbul ignore next */
(cov_1v4xpht49v().s[5]++, require('ssim.js'));
const {
  PNG
} =
/* istanbul ignore next */
(cov_1v4xpht49v().s[6]++, require('pngjs'));
const rimraf =
/* istanbul ignore next */
(cov_1v4xpht49v().s[7]++, require('rimraf'));
const glur =
/* istanbul ignore next */
(cov_1v4xpht49v().s[8]++, require('glur'));
const ImageComposer =
/* istanbul ignore next */
(cov_1v4xpht49v().s[9]++, require('./image-composer'));

/**
 * Helper function to create reusable image resizer
 */
/* istanbul ignore next */
cov_1v4xpht49v().s[10]++;
const createImageResizer = (width, height) => {
  /* istanbul ignore next */
  cov_1v4xpht49v().f[0]++;
  cov_1v4xpht49v().s[11]++;
  return (source) => {
    /* istanbul ignore next */
    cov_1v4xpht49v().f[1]++;
    const resized =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[12]++, new PNG({
      width,
      height,
      fill: true
    }));
    /* istanbul ignore next */
    cov_1v4xpht49v().s[13]++;
    PNG.bitblt(source, resized, 0, 0, source.width, source.height, 0, 0);
    /* istanbul ignore next */
    cov_1v4xpht49v().s[14]++;
    return resized;
  };
};

/**
 * Fills diff area with black transparent color for meaningful diff
 */
/* eslint-disable no-plusplus, no-param-reassign, no-bitwise */
/* istanbul ignore next */
cov_1v4xpht49v().s[15]++;
const fillSizeDifference = (width, height) => {
  /* istanbul ignore next */
  cov_1v4xpht49v().f[2]++;
  cov_1v4xpht49v().s[16]++;
  return (image) => {
    /* istanbul ignore next */
    cov_1v4xpht49v().f[3]++;
    cov_1v4xpht49v().s[17]++;
    const inArea = (x, y) => {
      /* istanbul ignore next */
      cov_1v4xpht49v().f[4]++;
      cov_1v4xpht49v().s[18]++;
      return (
        /* istanbul ignore next */
        (cov_1v4xpht49v().b[0][0]++, y > height) ||
        /* istanbul ignore next */
        (cov_1v4xpht49v().b[0][1]++, x > width)
      );
    };
    /* istanbul ignore next */
    cov_1v4xpht49v().s[19]++;
    for (let y =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[20]++, 0); y < image.height; y++) {
      /* istanbul ignore next */
      cov_1v4xpht49v().s[21]++;
      for (let x =
      /* istanbul ignore next */
      (cov_1v4xpht49v().s[22]++, 0); x < image.width; x++) {
        /* istanbul ignore next */
        cov_1v4xpht49v().s[23]++;
        if (inArea(x, y)) {
          /* istanbul ignore next */
          cov_1v4xpht49v().b[1][0]++;
          const idx =
          /* istanbul ignore next */
          (cov_1v4xpht49v().s[24]++, image.width * y + x << 2);
          /* istanbul ignore next */
          cov_1v4xpht49v().s[25]++;
          image.data[idx] = 0;
          /* istanbul ignore next */
          cov_1v4xpht49v().s[26]++;
          image.data[idx + 1] = 0;
          /* istanbul ignore next */
          cov_1v4xpht49v().s[27]++;
          image.data[idx + 2] = 0;
          /* istanbul ignore next */
          cov_1v4xpht49v().s[28]++;
          image.data[idx + 3] = 64;
        } else
        /* istanbul ignore next */
        {
          cov_1v4xpht49v().b[1][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_1v4xpht49v().s[29]++;
    return image;
  };
};
/* eslint-enabled */
/**
 * This was originally embedded in diffImageToSnapshot
 * when it only worked with pixelmatch.  It has a default
 * threshold of 0.01 defined in terms of what it means to pixelmatch.
 * It has been moved here as part of the SSIM implementation to make it
 * a little easier to read and find.
 * More information about this can be found under the options section listed
 * in https://github.com/mapbox/pixelmatch/README.md and in the original pixelmatch
 * code.  There is also some documentation on this in our README.md under the
 * customDiffConfig option.
 * @type {{threshold: number}}
 */
const defaultPixelmatchDiffConfig =
/* istanbul ignore next */
(cov_1v4xpht49v().s[30]++, {
  threshold: 0.01
});
/**
 * This is the default SSIM diff configuration
 * for the jest-image-snapshot's use of the ssim.js
 * library.  Bezkrovny is a specific SSIM algorithm optimized
 * for speed by downsampling the origin image into a smaller image.
 * For the small loss in precision, it is roughly 9x faster than the
 * SSIM preset 'fast' -- which is modeled after the original SSIM whitepaper.
 * Wang, et al. 2004 on "Image Quality Assessment: From Error Visibility to Structural Similarity"
 * (https://github.com/obartra/ssim/blob/master/assets/ssim.pdf)
 * Most users will never need or want to change this -- unless --
 * they want to get a better quality generated diff.
 * @type {{ssim: string}}
 */
const defaultSSIMDiffConfig =
/* istanbul ignore next */
(cov_1v4xpht49v().s[31]++, {
  ssim: 'bezkrovny'
});

/**
 * Helper function for SSIM comparison that allows us to use the existing diff
 * config that works with jest-image-snapshot to pass parameters
 * that will work with SSIM.  It also transforms the parameters to match the spec
 * required by the SSIM library.
 */
/* istanbul ignore next */
cov_1v4xpht49v().s[32]++;
const ssimMatch = (newImageData, baselineImageData, diffImageData, imageWidth, imageHeight, diffConfig) => {
  /* istanbul ignore next */
  cov_1v4xpht49v().f[5]++;
  const newImage =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[33]++, {
    data: newImageData,
    width: imageWidth,
    height: imageHeight
  });
  const baselineImage =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[34]++, {
    data: baselineImageData,
    width: imageWidth,
    height: imageHeight
  });
  // eslint-disable-next-line camelcase
  const {
    ssim_map,
    mssim
  } =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[35]++, ssim.ssim(newImage, baselineImage, diffConfig));
  // Converts the SSIM value to different pixels based on image width and height
  // conforms to how pixelmatch works.
  const diffPixels =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[36]++, (1 - mssim) * imageWidth * imageHeight);
  const diffRgbaPixels =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[37]++, new DataView(diffImageData.buffer, diffImageData.byteOffset));
  /* istanbul ignore next */
  cov_1v4xpht49v().s[38]++;
  for (let ln =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[39]++, 0); ln !== imageHeight; ++ln) {
    /* istanbul ignore next */
    cov_1v4xpht49v().s[40]++;
    for (let pos =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[41]++, 0); pos !== imageWidth; ++pos) {
      const rpos =
      /* istanbul ignore next */
      (cov_1v4xpht49v().s[42]++, ln * imageWidth + pos);
      // initial value is transparent.  We'll add in the SSIM offset.
      // red (ff) green (00) blue (00) alpha (00)
      const diffValue =
      /* istanbul ignore next */
      (cov_1v4xpht49v().s[43]++, 0xff000000 + Math.floor(0xff * (1 - ssim_map.data[
      // eslint-disable-next-line no-mixed-operators
      ssim_map.width * Math.round(ssim_map.height * ln / imageHeight) +
      // eslint-disable-next-line no-mixed-operators
      Math.round(ssim_map.width * pos / imageWidth)])));
      /* istanbul ignore next */
      cov_1v4xpht49v().s[44]++;
      diffRgbaPixels.setUint32(rpos * 4, diffValue);
    }
  }
  /* istanbul ignore next */
  cov_1v4xpht49v().s[45]++;
  return diffPixels;
};

/**
 * Aligns images sizes to biggest common value
 * and fills new pixels with transparent pixels
 */
/* istanbul ignore next */
cov_1v4xpht49v().s[46]++;
const alignImagesToSameSize = (firstImage, secondImage) => {
  /* istanbul ignore next */
  cov_1v4xpht49v().f[6]++;
  // Keep original sizes to fill extended area later
  const firstImageWidth =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[47]++, firstImage.width);
  const firstImageHeight =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[48]++, firstImage.height);
  const secondImageWidth =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[49]++, secondImage.width);
  const secondImageHeight =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[50]++, secondImage.height);
  // Calculate biggest common values
  const resizeToSameSize =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[51]++, createImageResizer(Math.max(firstImageWidth, secondImageWidth), Math.max(firstImageHeight, secondImageHeight)));
  // Resize both images
  const resizedFirst =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[52]++, resizeToSameSize(firstImage));
  const resizedSecond =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[53]++, resizeToSameSize(secondImage));
  // Fill resized area with black transparent pixels
  /* istanbul ignore next */
  cov_1v4xpht49v().s[54]++;
  return [fillSizeDifference(firstImageWidth, firstImageHeight)(resizedFirst), fillSizeDifference(secondImageWidth, secondImageHeight)(resizedSecond)];
};
/* istanbul ignore next */
cov_1v4xpht49v().s[55]++;
const isFailure = ({
  pass,
  updateSnapshot
}) => {
  /* istanbul ignore next */
  cov_1v4xpht49v().f[7]++;
  cov_1v4xpht49v().s[56]++;
  return (
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[2][0]++, !pass) &&
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[2][1]++, !updateSnapshot)
  );
};
/* istanbul ignore next */
cov_1v4xpht49v().s[57]++;
const shouldUpdate = ({
  pass,
  updateSnapshot,
  updatePassedSnapshot
}) => {
  /* istanbul ignore next */
  cov_1v4xpht49v().f[8]++;
  cov_1v4xpht49v().s[58]++;
  return (
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[3][0]++, !pass) &&
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[3][1]++, updateSnapshot) ||
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[3][2]++, pass) &&
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[3][3]++, updatePassedSnapshot)
  );
};
/* istanbul ignore next */
cov_1v4xpht49v().s[59]++;
const shouldFail = ({
  totalPixels,
  diffPixelCount,
  hasSizeMismatch,
  allowSizeMismatch,
  failureThresholdType,
  failureThreshold
}) => {
  /* istanbul ignore next */
  cov_1v4xpht49v().f[9]++;
  let pass =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[60]++, false);
  let diffSize =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[61]++, false);
  const diffRatio =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[62]++, diffPixelCount / totalPixels);
  /* istanbul ignore next */
  cov_1v4xpht49v().s[63]++;
  if (hasSizeMismatch) {
    /* istanbul ignore next */
    cov_1v4xpht49v().b[4][0]++;
    cov_1v4xpht49v().s[64]++;
    // do not fail if allowSizeMismatch is set
    pass = allowSizeMismatch;
    /* istanbul ignore next */
    cov_1v4xpht49v().s[65]++;
    diffSize = true;
  } else
  /* istanbul ignore next */
  {
    cov_1v4xpht49v().b[4][1]++;
  }
  cov_1v4xpht49v().s[66]++;
  if (
  /* istanbul ignore next */
  (cov_1v4xpht49v().b[6][0]++, !diffSize) ||
  /* istanbul ignore next */
  (cov_1v4xpht49v().b[6][1]++, pass === true)) {
    /* istanbul ignore next */
    cov_1v4xpht49v().b[5][0]++;
    cov_1v4xpht49v().s[67]++;
    if (failureThresholdType === 'pixel') {
      /* istanbul ignore next */
      cov_1v4xpht49v().b[7][0]++;
      cov_1v4xpht49v().s[68]++;
      pass = diffPixelCount <= failureThreshold;
    } else {
      /* istanbul ignore next */
      cov_1v4xpht49v().b[7][1]++;
      cov_1v4xpht49v().s[69]++;
      if (failureThresholdType === 'percent') {
        /* istanbul ignore next */
        cov_1v4xpht49v().b[8][0]++;
        cov_1v4xpht49v().s[70]++;
        pass = diffRatio <= failureThreshold;
      } else {
        /* istanbul ignore next */
        cov_1v4xpht49v().b[8][1]++;
        cov_1v4xpht49v().s[71]++;
        throw new Error(`Unknown failureThresholdType: ${failureThresholdType}. Valid options are "pixel" or "percent".`);
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_1v4xpht49v().b[5][1]++;
  }
  cov_1v4xpht49v().s[72]++;
  return {
    pass,
    diffSize,
    diffRatio
  };
};
function diffImageToSnapshot(options) {
  /* istanbul ignore next */
  cov_1v4xpht49v().f[10]++;
  const {
    receivedImageBuffer,
    snapshotIdentifier,
    snapshotsDir,
    storeReceivedOnFailure,
    receivedDir =
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[9][0]++, path.join(options.snapshotsDir, '__received_output__')),
    diffDir =
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[10][0]++, path.join(options.snapshotsDir, '__diff_output__')),
    diffDirection,
    updateSnapshot =
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[11][0]++, false),
    updatePassedSnapshot =
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[12][0]++, false),
    customDiffConfig =
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[13][0]++, {}),
    failureThreshold,
    failureThresholdType,
    blur,
    allowSizeMismatch =
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[14][0]++, false),
    comparisonMethod =
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[15][0]++, 'pixelmatch')
  } =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[73]++, options);
  const comparisonFn =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[74]++, comparisonMethod === 'ssim' ?
  /* istanbul ignore next */
  (cov_1v4xpht49v().b[16][0]++, ssimMatch) :
  /* istanbul ignore next */
  (cov_1v4xpht49v().b[16][1]++, pixelmatch));
  let result =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[75]++, {});
  const baselineSnapshotPath =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[76]++, path.join(snapshotsDir, `${snapshotIdentifier}.png`));
  /* istanbul ignore next */
  cov_1v4xpht49v().s[77]++;
  if (!fs.existsSync(baselineSnapshotPath)) {
    /* istanbul ignore next */
    cov_1v4xpht49v().b[17][0]++;
    cov_1v4xpht49v().s[78]++;
    mkdirp.sync(path.dirname(baselineSnapshotPath));
    /* istanbul ignore next */
    cov_1v4xpht49v().s[79]++;
    fs.writeFileSync(baselineSnapshotPath, receivedImageBuffer);
    /* istanbul ignore next */
    cov_1v4xpht49v().s[80]++;
    result = {
      added: true
    };
  } else {
    /* istanbul ignore next */
    cov_1v4xpht49v().b[17][1]++;
    const receivedSnapshotPath =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[81]++, path.join(receivedDir, `${snapshotIdentifier}-received.png`));
    /* istanbul ignore next */
    cov_1v4xpht49v().s[82]++;
    rimraf.sync(receivedSnapshotPath);
    const diffOutputPath =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[83]++, path.join(diffDir, `${snapshotIdentifier}-diff.png`));
    /* istanbul ignore next */
    cov_1v4xpht49v().s[84]++;
    rimraf.sync(diffOutputPath);
    const defaultDiffConfig =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[85]++, comparisonMethod !== 'ssim' ?
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[18][0]++, defaultPixelmatchDiffConfig) :
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[18][1]++, defaultSSIMDiffConfig));
    const diffConfig =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[86]++, Object.assign({}, defaultDiffConfig, customDiffConfig));
    const rawReceivedImage =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[87]++, PNG.sync.read(receivedImageBuffer));
    const rawBaselineImage =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[88]++, PNG.sync.read(fs.readFileSync(baselineSnapshotPath)));
    const hasSizeMismatch =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[89]++,
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[19][0]++, rawReceivedImage.height !== rawBaselineImage.height) ||
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[19][1]++, rawReceivedImage.width !== rawBaselineImage.width));
    const imageDimensions =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[90]++, {
      receivedHeight: rawReceivedImage.height,
      receivedWidth: rawReceivedImage.width,
      baselineHeight: rawBaselineImage.height,
      baselineWidth: rawBaselineImage.width
    });
    // Align images in size if different
    const [receivedImage, baselineImage] =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[91]++, hasSizeMismatch ?
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[20][0]++, alignImagesToSameSize(rawReceivedImage, rawBaselineImage)) :
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[20][1]++, [rawReceivedImage, rawBaselineImage]));
    const imageWidth =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[92]++, receivedImage.width);
    const imageHeight =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[93]++, receivedImage.height);
    /* istanbul ignore next */
    cov_1v4xpht49v().s[94]++;
    if (
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[22][0]++, typeof blur === 'number') &&
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[22][1]++, blur > 0)) {
      /* istanbul ignore next */
      cov_1v4xpht49v().b[21][0]++;
      cov_1v4xpht49v().s[95]++;
      glur(receivedImage.data, imageWidth, imageHeight, blur);
      /* istanbul ignore next */
      cov_1v4xpht49v().s[96]++;
      glur(baselineImage.data, imageWidth, imageHeight, blur);
    } else
    /* istanbul ignore next */
    {
      cov_1v4xpht49v().b[21][1]++;
    }
    const diffImage =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[97]++, new PNG({
      width: imageWidth,
      height: imageHeight
    }));
    let diffPixelCount =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[98]++, 0);
    /* istanbul ignore next */
    cov_1v4xpht49v().s[99]++;
    diffPixelCount = comparisonFn(receivedImage.data, baselineImage.data, diffImage.data, imageWidth, imageHeight, diffConfig);
    const totalPixels =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[100]++, imageWidth * imageHeight);
    const {
      pass,
      diffSize,
      diffRatio
    } =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[101]++, shouldFail({
      totalPixels,
      diffPixelCount,
      hasSizeMismatch,
      allowSizeMismatch,
      failureThresholdType,
      failureThreshold
    }));
    /* istanbul ignore next */
    cov_1v4xpht49v().s[102]++;
    if (isFailure({
      pass,
      updateSnapshot
    })) {
      /* istanbul ignore next */
      cov_1v4xpht49v().b[23][0]++;
      cov_1v4xpht49v().s[103]++;
      if (storeReceivedOnFailure) {
        /* istanbul ignore next */
        cov_1v4xpht49v().b[24][0]++;
        cov_1v4xpht49v().s[104]++;
        mkdirp.sync(path.dirname(receivedSnapshotPath));
        /* istanbul ignore next */
        cov_1v4xpht49v().s[105]++;
        fs.writeFileSync(receivedSnapshotPath, receivedImageBuffer);
        /* istanbul ignore next */
        cov_1v4xpht49v().s[106]++;
        result = {
          receivedSnapshotPath
        };
      } else
      /* istanbul ignore next */
      {
        cov_1v4xpht49v().b[24][1]++;
      }
      cov_1v4xpht49v().s[107]++;
      mkdirp.sync(path.dirname(diffOutputPath));
      const composer =
      /* istanbul ignore next */
      (cov_1v4xpht49v().s[108]++, new ImageComposer({
        direction: diffDirection
      }));
      /* istanbul ignore next */
      cov_1v4xpht49v().s[109]++;
      composer.addImage(baselineImage, imageWidth, imageHeight);
      /* istanbul ignore next */
      cov_1v4xpht49v().s[110]++;
      composer.addImage(diffImage, imageWidth, imageHeight);
      /* istanbul ignore next */
      cov_1v4xpht49v().s[111]++;
      composer.addImage(receivedImage, imageWidth, imageHeight);
      const composerParams =
      /* istanbul ignore next */
      (cov_1v4xpht49v().s[112]++, composer.getParams());
      const compositeResultImage =
      /* istanbul ignore next */
      (cov_1v4xpht49v().s[113]++, new PNG({
        width: composerParams.compositeWidth,
        height: composerParams.compositeHeight
      }));

      // copy baseline, diff, and received images into composite result image
      /* istanbul ignore next */
      cov_1v4xpht49v().s[114]++;
      composerParams.images.forEach((image, index) => {
        /* istanbul ignore next */
        cov_1v4xpht49v().f[11]++;
        cov_1v4xpht49v().s[115]++;
        PNG.bitblt(image.imageData, compositeResultImage, 0, 0, image.imageWidth, image.imageHeight, composerParams.offsetX * index, composerParams.offsetY * index);
      });
      // Set filter type to Paeth to avoid expensive auto scanline filter detection
      // For more information see https://www.w3.org/TR/PNG-Filters.html
      const pngBuffer =
      /* istanbul ignore next */
      (cov_1v4xpht49v().s[116]++, PNG.sync.write(compositeResultImage, {
        filterType: 4
      }));
      /* istanbul ignore next */
      cov_1v4xpht49v().s[117]++;
      fs.writeFileSync(diffOutputPath, pngBuffer);
      /* istanbul ignore next */
      cov_1v4xpht49v().s[118]++;
      result = {
        ...result,
        pass: false,
        diffSize,
        imageDimensions,
        diffOutputPath,
        diffRatio,
        diffPixelCount,
        imgSrcString: `data:image/png;base64,${pngBuffer.toString('base64')}`
      };
    } else {
      /* istanbul ignore next */
      cov_1v4xpht49v().b[23][1]++;
      cov_1v4xpht49v().s[119]++;
      if (shouldUpdate({
        pass,
        updateSnapshot,
        updatePassedSnapshot
      })) {
        /* istanbul ignore next */
        cov_1v4xpht49v().b[25][0]++;
        cov_1v4xpht49v().s[120]++;
        mkdirp.sync(path.dirname(baselineSnapshotPath));
        /* istanbul ignore next */
        cov_1v4xpht49v().s[121]++;
        fs.writeFileSync(baselineSnapshotPath, receivedImageBuffer);
        /* istanbul ignore next */
        cov_1v4xpht49v().s[122]++;
        result = {
          updated: true
        };
      } else {
        /* istanbul ignore next */
        cov_1v4xpht49v().b[25][1]++;
        cov_1v4xpht49v().s[123]++;
        result = {
          pass,
          diffSize,
          diffRatio,
          diffPixelCount,
          diffOutputPath
        };
      }
    }
  }
  /* istanbul ignore next */
  cov_1v4xpht49v().s[124]++;
  return result;
}
function runDiffImageToSnapshot(options) {
  /* istanbul ignore next */
  cov_1v4xpht49v().f[12]++;
  cov_1v4xpht49v().s[125]++;
  options.receivedImageBuffer = options.receivedImageBuffer.toString('base64');
  const serializedInput =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[126]++, JSON.stringify(options));
  let result =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[127]++, {});
  const writeDiffProcess =
  /* istanbul ignore next */
  (cov_1v4xpht49v().s[128]++, childProcess.spawnSync(process.execPath, [`${__dirname}/diff-process.js`], {
    input: Buffer.from(serializedInput),
    stdio: ['pipe', 'inherit', 'inherit', 'pipe'],
    maxBuffer: 10 * 1024 * 1024 // 10 MB
  }));
  /* istanbul ignore next */
  cov_1v4xpht49v().s[129]++;
  if (writeDiffProcess.status === 0) {
    /* istanbul ignore next */
    cov_1v4xpht49v().b[26][0]++;
    const output =
    /* istanbul ignore next */
    (cov_1v4xpht49v().s[130]++, writeDiffProcess.output[3].toString());
    /* istanbul ignore next */
    cov_1v4xpht49v().s[131]++;
    result = JSON.parse(output);
  } else {
    /* istanbul ignore next */
    cov_1v4xpht49v().b[26][1]++;
    cov_1v4xpht49v().s[132]++;
    throw new Error(`Error running image diff: ${
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[27][0]++, writeDiffProcess.error) &&
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[27][1]++, writeDiffProcess.error.message) ||
    /* istanbul ignore next */
    (cov_1v4xpht49v().b[27][2]++, 'Unknown Error')}`);
  }
  /* istanbul ignore next */
  cov_1v4xpht49v().s[133]++;
  return result;
}
/* istanbul ignore next */
cov_1v4xpht49v().s[134]++;
module.exports = {
  diffImageToSnapshot,
  runDiffImageToSnapshot
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,