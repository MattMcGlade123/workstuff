9904955b28e9f76d52836ea8d087c11b
/*
 * Copyright (c) 2019 American Express Travel Related Services Company, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

/* eslint-disable global-require */
const ImageComposer = require('../src/image-composer');
describe('image-composer', () => {
  const imageOneRaw = {};
  const imageOneWidth = 100;
  const imageOneHeight = 100;
  const imageTwoRaw = {};
  const imageTwoWidth = 100;
  const imageTwoHeight = 100;
  it('it should use default direction horizontal', () => {
    const composer = new ImageComposer();
    const params = composer.getParams();
    expect(params).toHaveProperty('direction', 'horizontal');
  });
  it('it should change direction to vertical', () => {
    const composer = new ImageComposer({
      direction: 'vertical'
    });
    const params = composer.getParams();
    expect(params).toHaveProperty('direction', 'vertical');
  });
  it('it should add one image', () => {
    const composer = new ImageComposer();
    composer.addImage(imageOneRaw, imageOneWidth, imageOneHeight);
    const params = composer.getParams();
    expect(params).toHaveProperty('imagesCount', 1);
  });
  it('it should add two image', () => {
    const composer = new ImageComposer();
    composer.addImage(imageOneRaw, imageOneWidth, imageOneHeight);
    composer.addImage(imageTwoRaw, imageTwoWidth, imageTwoHeight);
    const params = composer.getParams();
    expect(params).toHaveProperty('imagesCount', 2);
  });
  it('it should align images horizontally', () => {
    const composer = new ImageComposer();
    composer.addImage(imageOneRaw, imageOneWidth, imageOneHeight);
    composer.addImage(imageTwoRaw, imageTwoWidth, imageTwoHeight);
    const params = composer.getParams();
    expect(params).toHaveProperty('compositeWidth', 200);
    expect(params).toHaveProperty('compositeHeight', 100);
    expect(params).toHaveProperty('offsetX', 100);
    expect(params).toHaveProperty('offsetY', 0);
  });
  it('it should align images vertically', () => {
    const composer = new ImageComposer({
      direction: 'vertical'
    });
    composer.addImage(imageOneRaw, imageOneWidth, imageOneHeight);
    composer.addImage(imageTwoRaw, imageTwoWidth, imageTwoHeight);
    const params = composer.getParams();
    expect(params).toHaveProperty('compositeWidth', 100);
    expect(params).toHaveProperty('compositeHeight', 200);
    expect(params).toHaveProperty('offsetX', 0);
    expect(params).toHaveProperty('offsetY', 100);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbWFnZUNvbXBvc2VyIiwicmVxdWlyZSIsImRlc2NyaWJlIiwiaW1hZ2VPbmVSYXciLCJpbWFnZU9uZVdpZHRoIiwiaW1hZ2VPbmVIZWlnaHQiLCJpbWFnZVR3b1JhdyIsImltYWdlVHdvV2lkdGgiLCJpbWFnZVR3b0hlaWdodCIsIml0IiwiY29tcG9zZXIiLCJwYXJhbXMiLCJnZXRQYXJhbXMiLCJleHBlY3QiLCJ0b0hhdmVQcm9wZXJ0eSIsImRpcmVjdGlvbiIsImFkZEltYWdlIl0sInNvdXJjZXMiOlsiaW1hZ2UtY29tcG9zZXIuc3BlYy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE5IEFtZXJpY2FuIEV4cHJlc3MgVHJhdmVsIFJlbGF0ZWQgU2VydmljZXMgQ29tcGFueSwgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0XG4gKiBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2VcbiAqIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzXG4gKiBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyXG4gKiB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBnbG9iYWwtcmVxdWlyZSAqL1xuY29uc3QgSW1hZ2VDb21wb3NlciA9IHJlcXVpcmUoJy4uL3NyYy9pbWFnZS1jb21wb3NlcicpO1xuXG5kZXNjcmliZSgnaW1hZ2UtY29tcG9zZXInLCAoKSA9PiB7XG4gIGNvbnN0IGltYWdlT25lUmF3ID0ge307XG4gIGNvbnN0IGltYWdlT25lV2lkdGggPSAxMDA7XG4gIGNvbnN0IGltYWdlT25lSGVpZ2h0ID0gMTAwO1xuXG4gIGNvbnN0IGltYWdlVHdvUmF3ID0ge307XG4gIGNvbnN0IGltYWdlVHdvV2lkdGggPSAxMDA7XG4gIGNvbnN0IGltYWdlVHdvSGVpZ2h0ID0gMTAwO1xuXG4gIGl0KCdpdCBzaG91bGQgdXNlIGRlZmF1bHQgZGlyZWN0aW9uIGhvcml6b250YWwnLCAoKSA9PiB7XG4gICAgY29uc3QgY29tcG9zZXIgPSBuZXcgSW1hZ2VDb21wb3NlcigpO1xuICAgIGNvbnN0IHBhcmFtcyA9IGNvbXBvc2VyLmdldFBhcmFtcygpO1xuXG4gICAgZXhwZWN0KHBhcmFtcykudG9IYXZlUHJvcGVydHkoJ2RpcmVjdGlvbicsICdob3Jpem9udGFsJyk7XG4gIH0pO1xuXG4gIGl0KCdpdCBzaG91bGQgY2hhbmdlIGRpcmVjdGlvbiB0byB2ZXJ0aWNhbCcsICgpID0+IHtcbiAgICBjb25zdCBjb21wb3NlciA9IG5ldyBJbWFnZUNvbXBvc2VyKHsgZGlyZWN0aW9uOiAndmVydGljYWwnIH0pO1xuICAgIGNvbnN0IHBhcmFtcyA9IGNvbXBvc2VyLmdldFBhcmFtcygpO1xuXG4gICAgZXhwZWN0KHBhcmFtcykudG9IYXZlUHJvcGVydHkoJ2RpcmVjdGlvbicsICd2ZXJ0aWNhbCcpO1xuICB9KTtcblxuICBpdCgnaXQgc2hvdWxkIGFkZCBvbmUgaW1hZ2UnLCAoKSA9PiB7XG4gICAgY29uc3QgY29tcG9zZXIgPSBuZXcgSW1hZ2VDb21wb3NlcigpO1xuICAgIGNvbXBvc2VyLmFkZEltYWdlKGltYWdlT25lUmF3LCBpbWFnZU9uZVdpZHRoLCBpbWFnZU9uZUhlaWdodCk7XG4gICAgY29uc3QgcGFyYW1zID0gY29tcG9zZXIuZ2V0UGFyYW1zKCk7XG5cbiAgICBleHBlY3QocGFyYW1zKS50b0hhdmVQcm9wZXJ0eSgnaW1hZ2VzQ291bnQnLCAxKTtcbiAgfSk7XG5cbiAgaXQoJ2l0IHNob3VsZCBhZGQgdHdvIGltYWdlJywgKCkgPT4ge1xuICAgIGNvbnN0IGNvbXBvc2VyID0gbmV3IEltYWdlQ29tcG9zZXIoKTtcbiAgICBjb21wb3Nlci5hZGRJbWFnZShpbWFnZU9uZVJhdywgaW1hZ2VPbmVXaWR0aCwgaW1hZ2VPbmVIZWlnaHQpO1xuICAgIGNvbXBvc2VyLmFkZEltYWdlKGltYWdlVHdvUmF3LCBpbWFnZVR3b1dpZHRoLCBpbWFnZVR3b0hlaWdodCk7XG4gICAgY29uc3QgcGFyYW1zID0gY29tcG9zZXIuZ2V0UGFyYW1zKCk7XG5cbiAgICBleHBlY3QocGFyYW1zKS50b0hhdmVQcm9wZXJ0eSgnaW1hZ2VzQ291bnQnLCAyKTtcbiAgfSk7XG5cbiAgaXQoJ2l0IHNob3VsZCBhbGlnbiBpbWFnZXMgaG9yaXpvbnRhbGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IGNvbXBvc2VyID0gbmV3IEltYWdlQ29tcG9zZXIoKTtcbiAgICBjb21wb3Nlci5hZGRJbWFnZShpbWFnZU9uZVJhdywgaW1hZ2VPbmVXaWR0aCwgaW1hZ2VPbmVIZWlnaHQpO1xuICAgIGNvbXBvc2VyLmFkZEltYWdlKGltYWdlVHdvUmF3LCBpbWFnZVR3b1dpZHRoLCBpbWFnZVR3b0hlaWdodCk7XG4gICAgY29uc3QgcGFyYW1zID0gY29tcG9zZXIuZ2V0UGFyYW1zKCk7XG5cbiAgICBleHBlY3QocGFyYW1zKS50b0hhdmVQcm9wZXJ0eSgnY29tcG9zaXRlV2lkdGgnLCAyMDApO1xuICAgIGV4cGVjdChwYXJhbXMpLnRvSGF2ZVByb3BlcnR5KCdjb21wb3NpdGVIZWlnaHQnLCAxMDApO1xuICAgIGV4cGVjdChwYXJhbXMpLnRvSGF2ZVByb3BlcnR5KCdvZmZzZXRYJywgMTAwKTtcbiAgICBleHBlY3QocGFyYW1zKS50b0hhdmVQcm9wZXJ0eSgnb2Zmc2V0WScsIDApO1xuICB9KTtcblxuICBpdCgnaXQgc2hvdWxkIGFsaWduIGltYWdlcyB2ZXJ0aWNhbGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IGNvbXBvc2VyID0gbmV3IEltYWdlQ29tcG9zZXIoeyBkaXJlY3Rpb246ICd2ZXJ0aWNhbCcgfSk7XG4gICAgY29tcG9zZXIuYWRkSW1hZ2UoaW1hZ2VPbmVSYXcsIGltYWdlT25lV2lkdGgsIGltYWdlT25lSGVpZ2h0KTtcbiAgICBjb21wb3Nlci5hZGRJbWFnZShpbWFnZVR3b1JhdywgaW1hZ2VUd29XaWR0aCwgaW1hZ2VUd29IZWlnaHQpO1xuICAgIGNvbnN0IHBhcmFtcyA9IGNvbXBvc2VyLmdldFBhcmFtcygpO1xuXG4gICAgZXhwZWN0KHBhcmFtcykudG9IYXZlUHJvcGVydHkoJ2NvbXBvc2l0ZVdpZHRoJywgMTAwKTtcbiAgICBleHBlY3QocGFyYW1zKS50b0hhdmVQcm9wZXJ0eSgnY29tcG9zaXRlSGVpZ2h0JywgMjAwKTtcbiAgICBleHBlY3QocGFyYW1zKS50b0hhdmVQcm9wZXJ0eSgnb2Zmc2V0WCcsIDApO1xuICAgIGV4cGVjdChwYXJhbXMpLnRvSGF2ZVByb3BlcnR5KCdvZmZzZXRZJywgMTAwKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNQSxhQUFhLEdBQUdDLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQztBQUV0REMsUUFBUSxDQUFDLGdCQUFnQixFQUFFLE1BQU07RUFDL0IsTUFBTUMsV0FBVyxHQUFHLENBQUMsQ0FBQztFQUN0QixNQUFNQyxhQUFhLEdBQUcsR0FBRztFQUN6QixNQUFNQyxjQUFjLEdBQUcsR0FBRztFQUUxQixNQUFN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