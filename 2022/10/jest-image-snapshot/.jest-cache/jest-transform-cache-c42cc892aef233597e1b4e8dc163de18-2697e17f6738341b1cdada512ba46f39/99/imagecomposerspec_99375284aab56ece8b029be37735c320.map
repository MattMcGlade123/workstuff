{"version":3,"names":["ImageComposer","require","describe","imageOneRaw","imageOneWidth","imageOneHeight","imageTwoRaw","imageTwoWidth","imageTwoHeight","it","composer","params","getParams","expect","toHaveProperty","direction","addImage"],"sources":["image-composer.spec.js"],"sourcesContent":["/*\n * Copyright (c) 2019 American Express Travel Related Services Company, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\n/* eslint-disable global-require */\nconst ImageComposer = require('../src/image-composer');\n\ndescribe('image-composer', () => {\n  const imageOneRaw = {};\n  const imageOneWidth = 100;\n  const imageOneHeight = 100;\n\n  const imageTwoRaw = {};\n  const imageTwoWidth = 100;\n  const imageTwoHeight = 100;\n\n  it('it should use default direction horizontal', () => {\n    const composer = new ImageComposer();\n    const params = composer.getParams();\n\n    expect(params).toHaveProperty('direction', 'horizontal');\n  });\n\n  it('it should change direction to vertical', () => {\n    const composer = new ImageComposer({ direction: 'vertical' });\n    const params = composer.getParams();\n\n    expect(params).toHaveProperty('direction', 'vertical');\n  });\n\n  it('it should add one image', () => {\n    const composer = new ImageComposer();\n    composer.addImage(imageOneRaw, imageOneWidth, imageOneHeight);\n    const params = composer.getParams();\n\n    expect(params).toHaveProperty('imagesCount', 1);\n  });\n\n  it('it should add two image', () => {\n    const composer = new ImageComposer();\n    composer.addImage(imageOneRaw, imageOneWidth, imageOneHeight);\n    composer.addImage(imageTwoRaw, imageTwoWidth, imageTwoHeight);\n    const params = composer.getParams();\n\n    expect(params).toHaveProperty('imagesCount', 2);\n  });\n\n  it('it should align images horizontally', () => {\n    const composer = new ImageComposer();\n    composer.addImage(imageOneRaw, imageOneWidth, imageOneHeight);\n    composer.addImage(imageTwoRaw, imageTwoWidth, imageTwoHeight);\n    const params = composer.getParams();\n\n    expect(params).toHaveProperty('compositeWidth', 200);\n    expect(params).toHaveProperty('compositeHeight', 100);\n    expect(params).toHaveProperty('offsetX', 100);\n    expect(params).toHaveProperty('offsetY', 0);\n  });\n\n  it('it should align images vertically', () => {\n    const composer = new ImageComposer({ direction: 'vertical' });\n    composer.addImage(imageOneRaw, imageOneWidth, imageOneHeight);\n    composer.addImage(imageTwoRaw, imageTwoWidth, imageTwoHeight);\n    const params = composer.getParams();\n\n    expect(params).toHaveProperty('compositeWidth', 100);\n    expect(params).toHaveProperty('compositeHeight', 200);\n    expect(params).toHaveProperty('offsetX', 0);\n    expect(params).toHaveProperty('offsetY', 100);\n  });\n});\n"],"mappings":"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"}