{"version":3,"names":["fs","require","path","TOUCHED_FILE_LIST_PATH","join","process","cwd","IS_ENABLED","env","JEST_IMAGE_SNAPSHOT_TRACK_OBSOLETE","OutdatedSnapshotReporter","markTouchedFile","filePath","touchedListFileDescriptor","openSync","writeSync","closeSync","readTouchedFileListFromDisk","existsSync","Array","from","Set","readFileSync","split","filter","file","onRunStart","unlinkSync","onRunComplete","touchedFiles","imageSnapshotDirectories","map","dirname","allFiles","dir","readdirSync","reduce","a","b","concat","endsWith","obsoleteFiles","includes","forEach","stderr","write","module","exports"],"sources":["outdated-snapshot-reporter.js"],"sourcesContent":["/*\n * Copyright (c) 2020 American Express Travel Related Services Company, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\n/* eslint-disable class-methods-use-this */\n\nconst fs = require('fs');\nconst path = require('path');\n\nconst TOUCHED_FILE_LIST_PATH = path.join(\n  process.cwd(),\n  '.jest-image-snapshot-touched-files'\n);\n\nconst IS_ENABLED = !!process.env.JEST_IMAGE_SNAPSHOT_TRACK_OBSOLETE;\n\nclass OutdatedSnapshotReporter {\n  /* istanbul ignore next - test coverage in child process */\n  static markTouchedFile(filePath) {\n    if (!IS_ENABLED) return;\n    const touchedListFileDescriptor = fs.openSync(TOUCHED_FILE_LIST_PATH, 'as');\n    fs.writeSync(touchedListFileDescriptor, `${filePath}\\n`);\n    fs.closeSync(touchedListFileDescriptor);\n  }\n\n  /* istanbul ignore next - test coverage in child process */\n  static readTouchedFileListFromDisk() {\n    if (!fs.existsSync(TOUCHED_FILE_LIST_PATH)) return [];\n\n    return Array.from(\n      new Set(\n        fs\n          .readFileSync(TOUCHED_FILE_LIST_PATH, 'utf-8')\n          .split('\\n')\n          .filter(file => file && fs.existsSync(file))\n      )\n    );\n  }\n\n  /* istanbul ignore next - test coverage in child process */\n  onRunStart() {\n    if (!IS_ENABLED) return;\n    if (fs.existsSync(TOUCHED_FILE_LIST_PATH)) {\n      fs.unlinkSync(TOUCHED_FILE_LIST_PATH);\n    }\n  }\n\n  /* istanbul ignore next - test coverage in child process */\n  onRunComplete() {\n    if (!IS_ENABLED) return;\n    const touchedFiles = OutdatedSnapshotReporter.readTouchedFileListFromDisk();\n    const imageSnapshotDirectories = Array.from(\n      new Set(touchedFiles.map(file => path.dirname(file)))\n    );\n    const allFiles = imageSnapshotDirectories\n      .map(dir => fs.readdirSync(dir).map(file => path.join(dir, file)))\n      .reduce((a, b) => a.concat(b), [])\n      .filter(file => file.endsWith('-snap.png'));\n    const obsoleteFiles = allFiles.filter(\n      file => !touchedFiles.includes(file)\n    );\n\n    if (fs.existsSync(TOUCHED_FILE_LIST_PATH)) {\n      fs.unlinkSync(TOUCHED_FILE_LIST_PATH);\n    }\n\n    obsoleteFiles.forEach((file) => {\n      process.stderr.write(`Deleting outdated snapshot \"${file}\"...\\n`);\n      fs.unlinkSync(file);\n    });\n  }\n}\n\nmodule.exports = OutdatedSnapshotReporter;\n"],"mappings":"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"}